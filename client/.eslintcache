[{"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\index.js":"1","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Signup\\Signup.js":"2","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Login\\Login.js":"3","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\serviceWorker.js":"4","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\PrivateRoute.js":"5","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\store.js":"6","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\App\\App.js":"7","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\App\\NotFound.js":"8","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Blog\\Blog.js":"9","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Post\\Post.js":"10","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\ContactMe\\ContactMe.js":"11","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Home\\Home.js":"12","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\About\\About.js":"13","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Confirmation\\Confirmation.js":"14","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Minttea\\Minttea.js":"15","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Dashboard\\Dashboard.js":"16","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\utils\\API.js":"17","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Footer\\Footer.js":"18","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Header\\Header.js":"19","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Dashboard\\Calendar.js":"20","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Dashboard\\Account.js":"21","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\reducers\\index.js":"22","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Project\\index.js":"23","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Article\\index.js":"24","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\reducers\\home.js":"25","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\actions\\types.js":"26","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Project\\FormProject\\index.jsx":"27","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Article\\Form\\index.jsx":"28"},{"size":2311,"mtime":1597920252109,"results":"29","hashOfConfig":"30"},{"size":7057,"mtime":1593787473930,"results":"31","hashOfConfig":"30"},{"size":4586,"mtime":1591612159029,"results":"32","hashOfConfig":"30"},{"size":5003,"mtime":1581367090296,"results":"33","hashOfConfig":"30"},{"size":434,"mtime":1590350322736,"results":"34","hashOfConfig":"30"},{"size":810,"mtime":1595885463469,"results":"35","hashOfConfig":"30"},{"size":245,"mtime":1590772542201,"results":"36","hashOfConfig":"30"},{"size":2020,"mtime":1597621968659,"results":"37","hashOfConfig":"30"},{"size":29066,"mtime":1613475850529,"results":"38","hashOfConfig":"30"},{"size":38331,"mtime":1598553961050,"results":"39","hashOfConfig":"30"},{"size":6383,"mtime":1613471011512,"results":"40","hashOfConfig":"30"},{"size":31371,"mtime":1613861351357,"results":"41","hashOfConfig":"30"},{"size":7305,"mtime":1611908482543,"results":"42","hashOfConfig":"30"},{"size":3728,"mtime":1597622007560,"results":"43","hashOfConfig":"30"},{"size":36473,"mtime":1606991738217,"results":"44","hashOfConfig":"30"},{"size":219315,"mtime":1613856944068,"results":"45","hashOfConfig":"30"},{"size":1587,"mtime":1589731154945,"results":"46","hashOfConfig":"30"},{"size":22737,"mtime":1597622149585,"results":"47","hashOfConfig":"30"},{"size":19909,"mtime":1613476484661,"results":"48","hashOfConfig":"30"},{"size":4640,"mtime":1599578637426,"results":"49","hashOfConfig":"30"},{"size":13045,"mtime":1600171472421,"results":"50","hashOfConfig":"30"},{"size":125,"mtime":1590772760641,"results":"51","hashOfConfig":"30"},{"size":55,"mtime":1589304427836,"results":"52","hashOfConfig":"30"},{"size":41,"mtime":1581369343270,"results":"53","hashOfConfig":"30"},{"size":5652,"mtime":1606991672069,"results":"54","hashOfConfig":"30"},{"size":1122,"mtime":1606990871459,"results":"55","hashOfConfig":"30"},{"size":14263,"mtime":1613858496480,"results":"56","hashOfConfig":"30"},{"size":14502,"mtime":1591118021772,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"cndxj4",{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\index.js",[],["127","128"],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Signup\\Signup.js",["129","130","131"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport API from \"../../utils/API\";\r\nimport { FullPage, Slide } from 'react-full-page';\r\nimport 'whatwg-fetch';\r\nimport 'bootstrap';\r\nimport Fingerprint from 'fingerprintjs';\r\nimport * as $ from \"jquery\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst socketURL =\r\n\tprocess.env.NODE_ENV === 'production'\r\n\t\t? window.location.hostname\r\n\t\t: 'localhost:8800';\r\n\r\nconst socket = socketIOClient(socketURL, { 'transports': ['websocket', 'polling'] });\r\n\r\nclass Signup extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tconfirm_password: '',\r\n\t\t\tmodal_msg: '',\r\n\t\t};\r\n\t\tthis.send_signup = this.send_signup.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tif (localStorage.getItem('email')) {\r\n\t\t\twindow.location = \"/dashboard\";\r\n\t\t}\r\n\t}\r\n\tasync send_signup() {\r\n\t\tlet self = this;\r\n\t\tvar f = new Fingerprint().get();\r\n\t\tvar _fingerprint = f.toString();\r\n\t\tvar _role = [\"normal\"];\r\n\t\tconst { username, email, password, confirm_password } = this.state;\r\n\t\tconst { onSubmitNotification } = this.props;\r\n\t\ttry {\r\n\t\t\tif (password != confirm_password) throw { text: 'Please check your password confirmation' };\r\n\t\t\tawait API.signup({ username, email, password, _fingerprint, _role })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\tmodal_msg: res.data.text\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\t$('#signup_modal').modal('toggle');\r\n\t\t\t\t\t\tsocket.emit(\"USER_UPDATED\", res.data.text);\r\n\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\ttype: 'User Account Created',\r\n\t\t\t\t\t\t\tdescription: '\\'' + email + '\\' created an account as \\'' + username + '\\'',\r\n\t\t\t\t\t\t\tauthor: email\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\tmodal_msg: error.response.data.text\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\t$('#signup_modal').modal('toggle');\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tself.setState({\r\n\t\t\t\tmodal_msg: JSON.stringify(error)\r\n\t\t\t}, () => {\r\n\t\t\t\t$('#signup_modal').modal('toggle');\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleChange(event) {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.id]: event.target.value\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { username, email, password, confirm_password, modal_msg } = this.state;\r\n\t\treturn (\r\n\t\t\t<FullPage>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<section className=\"first_section_signup\">\r\n\t\t\t\t\t\t<div className=\"wrapper_full\">\r\n\t\t\t\t\t\t\t<div className=\"modal fade\" id=\"signup_modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"signup_modalLabel\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t\t<div className=\"modal-dialog\" role=\"document\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a title=\"Close\" className=\"modal-close\" data-dismiss=\"modal\">Close</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"signup_modalLabel\">Hello!</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{modal_msg}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"Content\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"face face1\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>Login</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"face face2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6>Welcome to boutaleb.</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>The blog to speak louder.</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"text-muted\" href=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span data-attr-span=\"login.\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlogin.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"Sidebar\">\r\n\t\t\t\t\t\t\t\t<div className=\"wrap\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"Head_Signup\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>Signup</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"Signup\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='input-field col s12'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='validate form-group-input'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\t\t\t\t\tid='username'\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='username' className={username ? 'active' : ''}>username</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='input-field col s12'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='validate form-group-input'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='email' className={email ? 'active' : ''}>Email</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='input-field col s6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='validate form-group-input'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='password' className={password ? 'active' : ''}>Password</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='input-field col s6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='validate form-group-input'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='confirm_password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid='confirm_password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={confirm_password}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='confirm_password' className={confirm_password ? 'active' : ''}>Password</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field col s12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pull-right\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='btn_login'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.send_signup}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span data-attr-span=\"signup.\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsignup.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</Slide>\r\n\t\t\t</FullPage>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ onSubmitNotification: data => dispatch({ type: 'SUBMIT_NOTIFICATION', data }) })\r\nconst mapStateToProps = state => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup) ","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Login\\Login.js",["132"],"import React from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { FullPage, Slide } from 'react-full-page';\r\nimport 'whatwg-fetch';\r\nimport 'bootstrap';\r\nimport * as $ from \"jquery\";\r\n\r\nclass Login extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n        this.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tmodal_msg: ''\r\n\t\t};\r\n        this.send_login = this.send_login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tif(localStorage.getItem('email')) {\r\n\t\t\twindow.location = \"/dashboard\";\r\n\t\t}\r\n\t}\r\n\tasync send_login() {\r\n\t\tlet self = this;\r\n        const { email, password } = this.state;\r\n        await API.login(email, password)\r\n\t\t.then((res) => {\r\n\t\t\tlocalStorage.setItem(\"token\", res.data.token);\r\n\t\t\tlocalStorage.setItem('email', res.data.email);\r\n\t\t\tlocalStorage.setItem('username', res.data.username);\r\n\t\t\twindow.location = \"/dashboard\";\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tself.setState({\r\n\t\t\t\tmodal_msg: error.response.data.text\r\n\t\t\t}, () => {\r\n\t\t\t\t$('#login_modal').modal('toggle');\r\n\t\t\t});\r\n\t\t});\r\n    }\r\n\thandleChange(event) {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.id]: event.target.value\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { email, password, modal_msg } = this.state;\r\n\t\treturn (\r\n\t\t\t<FullPage>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<section className=\"first_section_login\">\r\n\t\t\t\t\t\t<div className=\"wrapper_full\">\r\n\t\t\t\t\t\t\t<div className=\"modal fade\" id=\"login_modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"signup_modalLabel\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t\t<div className=\"modal-dialog\" role=\"document\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a title=\"Close\" className=\"modal-close\" data-dismiss=\"modal\">Close</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"signup_modalLabel\">Hello!</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{modal_msg}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"Sidebar\">\r\n\t\t\t\t\t\t\t\t<div className=\"wrap\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"Head_Login\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>Login</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"Login\">\r\n\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='input-field col s12'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='validate form-group-input' \r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='email' \r\n\t\t\t\t\t\t\t\t\t\t\t\tname='email' \r\n\t\t\t\t\t\t\t\t\t\t\t\tid='email' \r\n\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={email} \r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='email' className={email ? 'active' : ''}>Email</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='input-field col s12'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='validate form-group-input' \r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='password' \r\n\t\t\t\t\t\t\t\t\t\t\t\tname='password' \r\n\t\t\t\t\t\t\t\t\t\t\t\tid='password' \r\n\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={password} \r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='password' className={password ? 'active' : ''}>Password</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field col s12\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pull-right\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='btn_login' \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.send_login}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span data-attr-span=\"login.\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlogin.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"Content\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"face face1\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>Signup.</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"face face2\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6>Welcome to boutaleb.</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>The blog to speak louder.</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"text-muted\" href=\"/signup\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span data-attr-span=\"signup.\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsignup.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</Slide>\r\n\t\t\t</FullPage>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\serviceWorker.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\PrivateRoute.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\store.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\App\\App.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\App\\NotFound.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Blog\\Blog.js",["133"],"import React from 'react';\r\nimport Autocomplete from 'react-autocomplete';\r\nimport Swiper, { Navigation, Pagination } from 'swiper';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { FullPage, Slide } from 'react-full-page';\r\nimport { Link } from 'react-router-dom';\r\nimport 'whatwg-fetch';\r\nimport Footer from '../Footer/Footer';\r\nimport * as $ from \"jquery\";\r\nimport 'bootstrap';\r\n\r\nvar _ = require('lodash');\r\n\r\nclass Blog extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentPage: 1,\r\n\t\t\ttodosPerPage: 6,\r\n\t\t\tcurrentCard: 0,\r\n\t\t\tposition: 0,\r\n\t\t\twidth: 0,\r\n\t\t\tsort: 'Relevant',\r\n\t\t\ttimeframe: 'All_Time',\r\n\t\t\tcategorie: '',\r\n\t\t\ttags: '',\r\n\t\t};\r\n\t\tthis.handleJSONTOHTMLIMAGE = this.handleJSONTOHTMLIMAGE.bind(this);\r\n\t\tthis._FormatNumberLength = this._FormatNumberLength.bind(this);\r\n\t\tthis.handleClickPage = this.handleClickPage.bind(this);\r\n\t\tthis._handleMouseMove = this._handleMouseMove.bind(this);\r\n\t\tthis._handleModal = this._handleModal.bind(this);\r\n\t\tthis.handleChangeField = this.handleChangeField.bind(this);\r\n\t\tthis.handleShowFilter = this.handleShowFilter.bind(this);\r\n\t\tthis._handleDrag = this._handleDrag.bind(this);\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tconst { onLoad } = this.props;\r\n\t\tconst self = this;\r\n\t\taxios('/api/articles')\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tonLoad(response.data);\r\n\t\t\t\tfunction runAfterElementExists(jquery_selector, callback) {\r\n\t\t\t\t\tvar checker = window.setInterval(function () {\r\n\t\t\t\t\t\tif ($(jquery_selector).length) {\r\n\t\t\t\t\t\t\tclearInterval(checker);\r\n\t\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 200);\r\n\t\t\t\t}\r\n\t\t\t\trunAfterElementExists(\".second_section_blog .articles_slider_wrapper_cards_item\", function () {\r\n\t\t\t\t\tself._handleDrag();\r\n\t\t\t\t});\r\n\t\t\t\t$('.fixedHeaderContainer').addClass('blog_header');\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis._handleMouseMove();\r\n\t\tthis._handleModal();\r\n\t\tif (window.innerHeight > window.innerWidth) {\r\n\t\t\tif ($(window).width() <= 640) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttodosPerPage: 2\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif ($(window).width() <= 640) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttodosPerPage: 4\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t_handleDrag() {\r\n\t\t// configure Swiper to use modules\r\n\t\tSwiper.use([Navigation, Pagination]);\r\n\r\n\t\tvar mySwiper = new Swiper('.swiper-container', {\r\n\t\t\teffect: 'coverflow',\r\n\t\t\tdirection: 'horizontal',\r\n\t\t\tgrabCursor: true,\r\n\t\t\tslidesPerView: 3.25,\r\n\t\t\tcenteredSlides: false,\r\n\t\t\tcenteredSlidesBounds: false,\r\n\t\t\tpaginationClickable: true,\r\n\t\t\tcenterInsufficientSlides: false,\r\n\t\t\tspaceBetween: 0,\r\n\t\t\tautoResize: false,\r\n\t\t\tobserver: true,\r\n\t\t\twatchOverflow: true,\r\n\t\t\tvariableWidth: true,\r\n\t\t\tcoverflowEffect: {\r\n\t\t\t\trotate: 0,\r\n\t\t\t\tstretch: 0,\r\n\t\t\t\tdepth: 0,\r\n\t\t\t\tmodifier: 3,\r\n\t\t\t\tslideShadows: false\r\n\t\t\t},\r\n\t\t\tsimulateTouch: true,\r\n\t\t\tnavigation: {\r\n\t\t\t\tnextEl: '.swiper-button-next',\r\n\t\t\t\tprevEl: '.swiper-button-prev',\r\n\t\t\t}\r\n\t\t});\r\n\t\t$(window).resize(function () {\r\n\t\t\tif (window.innerHeight > window.innerWidth) {\r\n\t\t\t\tif ($(window).width() <= 640) {\r\n\t\t\t\t\tmySwiper.params.slidesPerView = 1.25;\r\n\t\t\t\t\tmySwiper.update();\r\n\t\t\t\t}\r\n\t\t\t\tif ($(window).width() <= 768) {\r\n\t\t\t\t\tmySwiper.params.slidesPerView = 2.25;\r\n\t\t\t\t\tmySwiper.update();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($(window).width() <= 768) {\r\n\t\t\t\t\tmySwiper.params.slidesPerView = 2.25;\r\n\t\t\t\t\tmySwiper.update();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t$(window).trigger('resize');\r\n\t}\r\n\t_handleMouseMove() {\r\n\t\tfunction Parallax(options) {\r\n\t\t\toptions = options || {};\r\n\t\t\tthis.nameSpaces = {\r\n\t\t\t\twrapper: options.wrapper || '.first_section_blog',\r\n\t\t\t\tlayers: options.layers || '.parallax-layer',\r\n\t\t\t\tdeep: options.deep || 'data-parallax-deep'\r\n\t\t\t};\r\n\t\t\tthis.init = function () {\r\n\t\t\t\tvar self = this,\r\n\t\t\t\t\tparallaxWrappers = document.querySelectorAll(this.nameSpaces.wrapper);\r\n\t\t\t\tfor (var i = 0; i < parallaxWrappers.length; i++) {\r\n\t\t\t\t\t(function (i) {\r\n\t\t\t\t\t\tparallaxWrappers[i].addEventListener('mousemove', function (e) {\r\n\t\t\t\t\t\t\tvar x = e.clientX,\r\n\t\t\t\t\t\t\t\ty = e.clientY,\r\n\t\t\t\t\t\t\t\tlayers = parallaxWrappers[i].querySelectorAll(self.nameSpaces.layers);\r\n\t\t\t\t\t\t\tfor (var j = 0; j < layers.length; j++) {\r\n\t\t\t\t\t\t\t\t(function (j) {\r\n\t\t\t\t\t\t\t\t\tvar deep = layers[j].getAttribute(self.nameSpaces.deep),\r\n\t\t\t\t\t\t\t\t\t\tdisallow = layers[j].getAttribute('data-parallax-disallow'),\r\n\t\t\t\t\t\t\t\t\t\tdirection = layers[j].getAttribute('data-parallax-direction'),\r\n\t\t\t\t\t\t\t\t\t\titemX = (disallow && disallow === 'x') ? 0 : x / deep,\r\n\t\t\t\t\t\t\t\t\t\titemY = (disallow && disallow === 'y') ? 0 : y / deep;\r\n\t\t\t\t\t\t\t\t\titemX = (direction && direction === 'minus') ? -itemX : itemX;\r\n\t\t\t\t\t\t\t\t\titemY = (direction && direction === 'plus') ? -itemY : itemY;\r\n\t\t\t\t\t\t\t\t\tif (disallow && disallow === 'both') return;\r\n\t\t\t\t\t\t\t\t\tlayers[j].style.transform = 'translateX(' + itemX + '%) translateY(' + itemY + '%)';\r\n\t\t\t\t\t\t\t\t})(j);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})(i);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis.init();\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tnew Parallax();\r\n\r\n\t\tlet items = document.querySelectorAll(\".socials-item-icon\");\r\n\t\titems.forEach((item, index) => {\r\n\t\t\titem.addEventListener(\"mousemove\", mouseMove);\r\n\t\t\titem.addEventListener(\"mouseleave\", mouseLeave);\r\n\t\t});\r\n\t\tfunction mouseMove(e) {\r\n\t\t\tlet target = e.target.closest(\"a\"),\r\n\t\t\t\ttargetData = target.getBoundingClientRect(),\r\n\t\t\t\ttargetIcon = target.querySelector(\"i\"),\r\n\t\t\t\toffset = {\r\n\t\t\t\t\tx: ((e.pageX - (targetData.left + targetData.width / 2)) / 4) * -1,\r\n\t\t\t\t\ty: ((e.pageY - (targetData.top + targetData.height / 2)) / 4) * -1\r\n\t\t\t\t};\r\n\t\t\ttarget.style.transform = \"translate(\" + offset.x + \"px,\" + offset.y + \"px) scale(\" + 1.1 + \")\";\r\n\t\t\ttarget.style.webkitTransform = \"translate(\" + offset.x + \"px,\" + offset.y + \"px) scale(\" + 1.1 + \")\";\r\n\t\t\tdocument.querySelectorAll(\".socials-item-icon\").forEach((e) => {\r\n\t\t\t\tif (e != target) {\r\n\t\t\t\t\te.style.transform = \"translate(\" + offset.x / 2 + \"px, \" + offset.y / 2 + \"px) scale(\" + 0.9 + \")\";\r\n\t\t\t\t\te.style.webkitTransform = \"translate(\" + offset.x / 2 + \"px, \" + offset.y / 2 + \"px) scale(\" + 0.9 + \")\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttargetIcon.style.transform = \"translate(\" + offset.x + \"px,\" + offset.y + \"px) scale(\" + 1.1 + \")\";\r\n\t\t\ttargetIcon.style.webkitTransform = \"translate(\" + offset.x + \"px,\" + offset.y + \"px) scale(\" + 1.1 + \")\";\r\n\t\t}\r\n\t\tfunction mouseLeave(e) {\r\n\t\t\tdocument.querySelectorAll(\".socials-item-icon\").forEach((target) => {\r\n\t\t\t\tlet targetIcon = target.querySelector(\"i\");\r\n\t\t\t\ttarget.style.transform = \"translate(0px,0px) scale(1)\";\r\n\t\t\t\ttarget.style.webkitTransform = \"translate(0px,0px) scale(1)\";\r\n\t\t\t\ttargetIcon.style.transform = \"translate(0px,0px) scale(1)\";\r\n\t\t\t\ttargetIcon.style.webkitTransform = \"translate(0px,0px) scale(1)\";\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t_FormatNumberLength(num, length) {\r\n\t\tvar r = \"\" + num;\r\n\t\twhile (r.length < length) {\r\n\t\t\tr = \"0\" + r;\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n\thandleJSONTOHTMLIMAGE(inputDelta, index) {\r\n\t\tfunction runAfterElementExists(jquery_selector, callback) {\r\n\t\t\tvar checker = window.setInterval(function () {\r\n\t\t\t\tif (jquery_selector) {\r\n\t\t\t\t\tclearInterval(checker);\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}, 200);\r\n\t\t}\r\n\t\trunAfterElementExists(inputDelta, function () {\r\n\t\t\tconst html = $.parseHTML(inputDelta);\r\n\t\t\t$('.card_' + index + ' figure').html($(html).find('img').first());\r\n\t\t});\r\n\t}\r\n\thandleClickPage(event) {\r\n\t\t$([document.documentElement, document.body]).animate({\r\n\t\t\tscrollTop: $(\"#second_section_blog\").offset().top\r\n\t\t}, 500);\r\n\t\tthis.setState({\r\n\t\t\tcurrentPage: Number(event.target.id)\r\n\t\t});\r\n\t}\r\n\thandleShowFilter(event) {\r\n\t\tvar wrapper = $('.modal-top-filter'),\r\n\t\t\tbuttonF = $('#myModal .filter');\r\n\t\tif (!wrapper.hasClass('expand')) {\r\n\t\t\twrapper.addClass('expand', 500);\r\n\t\t\tbuttonF.addClass('expand', 500);\r\n\t\t} else {\r\n\t\t\twrapper.removeClass('expand', 500);\r\n\t\t\tbuttonF.removeClass('expand', 500);\r\n\t\t}\r\n\t}\r\n\t_handleModal() {\r\n\t\tconst self = this;\r\n\t\tvar Boxlayout = function () {\r\n\t\t\tvar wrapper = document.getElementById('second_section_blog'),\r\n\t\t\t\telement = $('#modal_trigger'),\r\n\t\t\t\tmodal = $('#myModal'),\r\n\t\t\t\tcloseButton = $('.modal-close'),\r\n\t\t\t\texpandedClass = 'is-expanded',\r\n\t\t\t\thasExpandedClass = 'has-expanded-item';\r\n\r\n\t\t\treturn { init: init };\r\n\t\t\tfunction init() {\r\n\t\t\t\t_initEvents();\r\n\t\t\t}\r\n\t\t\tfunction _initEvents() {\r\n\t\t\t\telement.click(function () {\r\n\t\t\t\t\tif (!modal.hasClass(expandedClass)) {\r\n\t\t\t\t\t\tmodal.addClass(expandedClass, 500);\r\n\t\t\t\t\t\twrapper.classList.add(hasExpandedClass);\r\n\t\t\t\t\t\tdocument.getElementById('second_section_blog').parentElement.style.height = 'initial';\r\n\t\t\t\t\t\tdocument.getElementById('second_section_blog').parentElement.style.minHeight = '100vh';\r\n\t\t\t\t\t\t$('.fixedHeaderContainer').toggleClass('blog_header');\r\n\t\t\t\t\t\t$('.modal-top-filter input.tags').focus(() => {\r\n\t\t\t\t\t\t\t$('.modal-top-filter label#tags_label').toggleClass('active');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$('.modal-top-filter input.tags').blur(() => {\r\n\t\t\t\t\t\t\tif (!self.state.tags)\r\n\t\t\t\t\t\t\t\t$('.modal-top-filter label#tags_label').toggleClass('active');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tcloseButton.click(function (event) {\r\n\t\t\t\t\tif (modal.hasClass(expandedClass)) {\r\n\t\t\t\t\t\tmodal.removeClass(expandedClass);\r\n\t\t\t\t\t\twrapper.classList.remove(hasExpandedClass);\r\n\t\t\t\t\t\tdocument.getElementById('second_section_blog').parentElement.style.height = '100%';\r\n\t\t\t\t\t\t$('.fixedHeaderContainer').toggleClass('blog_header');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}();\r\n\t\tBoxlayout.init();\r\n\t}\r\n\thandleChangeField(key, event) {\r\n\t\tthis.setState({ [key]: event.target.value });\r\n\t}\r\n\trender() {\r\n\t\tconst { articles, match } = this.props;\r\n\t\tconst { currentPage, todosPerPage, sort, timeframe, categorie, tags } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<FullPage scrollMode={'normal'}>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<section className=\"active first_section_blog\">\r\n\t\t\t\t\t\t<span className=\"parallax-layer parallax-layer__1 l_name\" data-parallax-direction=\"plus\" data-parallax-deep=\"1000\">Boutaleb<span className=\"outlined\">Boutaleb</span>BoutalebBoutaleb</span>\r\n\t\t\t\t\t\t<span className=\"parallax-layer parallax-layer__2 f_name\" data-parallax-direction=\"minus\" data-parallax-deep=\"1000\">Zakariae<span className=\"outlined\">Zakariae</span>ZakariaeZakariae</span>\r\n\t\t\t\t\t\t<div id=\"social_media\">\r\n\t\t\t\t\t\t\t<div className=\"icons_gatherer\">\r\n\t\t\t\t\t\t\t\t<a href=\"https://dribbble.com/boutaleblcoder\" className=\"icon-button dribbble\"><i className=\"fab fa-dribbble\"></i><span></span></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://www.behance.net/boutaleblcoder/\" className=\"icon-button behance\"><i className=\"fab fa-behance\"></i><span></span></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/zakariae-bou-taleb-657953122/\" className=\"icon-button linkedin\"><i className=\"fab fa-linkedin-in\"></i><span></span></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://www.instagram.com/boutaleblcoder/\" className=\"icon-button instagram\"><i className=\"fab fa-instagram\"></i><span></span></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://fb.me/boutaleblcoder\" className=\"icon-button facebook\"><i className=\"icon-facebook\"></i><span></span></a>\r\n\t\t\t\t\t\t\t\t<a href=\"# \" className=\"icon-button scroll\">\r\n\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"wrapper left_part\">\r\n\t\t\t\t\t\t\t<div className=\"caption\">\r\n\t\t\t\t\t\t\t\t<p><b>The teacher</b></p>\r\n\t\t\t\t\t\t\t\t<p>My father was an educator, My grandfather was an educator, i was born to educate, and my sons will also educate.</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"wrapper right_part\">\r\n\t\t\t\t\t\t\t<div className=\"caption\">\r\n\t\t\t\t\t\t\t\t<p><b>The Coder</b></p>\r\n\t\t\t\t\t\t\t\t<p>Grew up next to a computer, learned to create at a young age, i was born to create to look from all sides and discover hidden meanings.</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</Slide>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<section id=\"second_section_blog\" className=\"second_section_blog\">\r\n\t\t\t\t\t\t{/* Modal */}\r\n\t\t\t\t\t\t<div className=\"modal myModal fade\" id=\"myModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n\t\t\t\t\t\t\t<div id=\"modal_dialog\" className=\"modal-dialog\" role=\"document\">\r\n\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-top\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tShowing&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>{((currentPage * todosPerPage) - todosPerPage) + 1}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;to&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>{((currentPage * todosPerPage) - todosPerPage) + _.toNumber(_.size(_.filter(_.filter(_.filter((sort === 'Relevant' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['comment'], ['desc']).slice(((currentPage * todosPerPage) - todosPerPage), (currentPage * todosPerPage)) : sort === 'Trending' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['view'], ['desc']).slice(((currentPage * todosPerPage) - todosPerPage), (currentPage * todosPerPage)) : sort === 'Most_Likes' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['upvotes'], ['desc']).slice(((currentPage * todosPerPage) - todosPerPage), (currentPage * todosPerPage)) : sort === 'Recent' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['createdAt'], ['desc']).slice(((currentPage * todosPerPage) - todosPerPage), (currentPage * todosPerPage)) : _.filter(articles, (_a) => { return !_a._hide })), function (o) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'Today')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'day');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Week')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'week');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Month')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'month');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Year')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'year');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'All_Time')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}), (op) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!categorie)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn op.categorie === categorie;\r\n\t\t\t\t\t\t\t\t\t\t\t}), (op_bytag) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!tags)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn op_bytag.tag.some(x => _.split(_.lowerCase(tags), ' ').some(_s_v => _.lowerCase(x).includes(_s_v)));\r\n\t\t\t\t\t\t\t\t\t\t\t})))}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;of&nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>{_.toNumber(_.size(_.filter(_.filter(_.filter((sort === 'Relevant' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['comment'], ['desc']) : sort === 'Trending' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['view'], ['desc']) : sort === 'Most_Likes' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['upvotes'], ['desc']) : sort === 'Recent' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['createdAt'], ['desc']) : _.filter(articles, (_a) => { return !_a._hide })), function (o) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'Today')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'day');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Week')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'week');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Month')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'month');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Year')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'year');\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'All_Time')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}), (op) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!categorie)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn op.categorie === categorie;\r\n\t\t\t\t\t\t\t\t\t\t\t}), (op_bytag) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!tags)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn op_bytag.tag.some(x => _.split(_.lowerCase(tags), ' ').some(_s_v => _.lowerCase(x).includes(_s_v)));\r\n\t\t\t\t\t\t\t\t\t\t\t})))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;articles.\r\n\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"filter\" onClick={(event) => this.handleShowFilter(event)}><i className=\"fas fa-sliders-h\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"# \" title=\"Close\" className=\"modal-close\" id=\"modal-close\" data-dismiss=\"modal\">Close</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-top-filter\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sort}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => this.handleChangeField('sort', ev)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-group-input sort\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"sort\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"sort\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Trending\">Trending</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Relevant\">Relevant</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Most_Liked\">Most Liked</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Recent\">Recent</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='sort' className={sort ? 'active' : ''}>sort</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={timeframe}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => this.handleChangeField('timeframe', ev)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-group-input timeframe\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"timeframe\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"timeframe\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Today\">Today</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"This_Past_Week\">This Past Week</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"This_Past_Month\">This Past Month</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"This_Past_Year\">This Past Year</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"All_Time\">All Time</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='timeframe' className={timeframe ? 'active' : ''}>timeframe</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={categorie}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => this.handleChangeField('categorie', ev)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-group-input categorie\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"categorie\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"categorie\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=''></option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Education\">Education</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Design\">Design</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Personnel\">Community</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Tutorials\">Tutorials</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='categorie' className={categorie ? 'active' : ''}>categorie</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\t\t\t\t\t\titems={_.flattenDeep(_.map(_.filter(articles, (_a) => { return !_a._hide }), 'tag'))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetItemValue={(item) => item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ id: 'tags', className: 'form-group-input tags', name: 'tags' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshouldItemRender={(item, tags) => item.toLowerCase().indexOf(tags.toLowerCase()) > -1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trenderItem={(item, isHighlighted) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={`item ${isHighlighted ? 'item-highlighted' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={tags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => this.setState({ tags: ev.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={(tags) => this.setState({ tags })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label id=\"tags_label\" htmlFor='tags' className={tags ? 'active' : ''}>tags</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='form-group-line'></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<ul id=\"page\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t_.slice(_.filter(_.filter(_.filter((sort === 'Relevant' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['comment'], ['desc']) : sort === 'Trending' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['view'], ['desc']) : sort === 'Most_Likes' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['upvotes'], ['desc']) : sort === 'Recent' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['createdAt'], ['desc']) : _.filter(articles, (_a) => { return !_a._hide })), function (o) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'Today')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'd');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Week')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'week');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Month')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'month');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Year')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'year');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'All_Time')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}), (op) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!categorie)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn op.categorie === categorie;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}), (op_bytag) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!tags)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn op_bytag.tag.some(x => _.split(_.lowerCase(tags), ' ').some(_s_v => _.lowerCase(x).includes(_s_v)));\r\n\t\t\t\t\t\t\t\t\t\t\t\t}), ((currentPage * todosPerPage) - todosPerPage), (currentPage * todosPerPage)).map((article, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"article_card article_anchor\" data-name={moment(article.createdAt).format(\"YYYY Do MM\")} id=\"article_card\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"col card card_\" + index} data-title={_.snakeCase(article.title)} data-index={_.add(index, 1)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<figure>{this.handleJSONTOHTMLIMAGE(article.body, index)}</figure>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted author\">by <b>{article.author}</b>, {moment(new Date(article.createdAt)).fromNow()}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>{article.title}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"categorie\">{article.categorie}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ul className=\"text-muted tags\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarticle.tag.map((t, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"tag_item\">{t}</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`${match.url}/${article._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"readmore\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button data-am-linearrow=\"tooltip tooltip-bottom\" display-name=\"Read More\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"line line-1\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"line line-2\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"comments_up_down\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted views\"><b>{_.size(article.view)}</b><i className=\"fas fa-eye\"></i></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted comments\"><b>{_.size(article.comment)}</b> <i className=\"fas fa-comment-alt\"></i></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted upvotes\"><b>{_.size(article.upvotes)}</b> <i className=\"fas fa-thumbs-up\"></i></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted downvotes\"><b>{_.size(article.downvotes)}</b> <i className=\"fas fa-thumbs-down\"></i></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t<ul id=\"page-numbers\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t([...Array(Math.ceil(_.filter(_.filter(_.filter((sort === 'Relevant' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['comment'], ['desc']) : sort === 'Trending' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['view'], ['desc']) : sort === 'Most_Likes' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['upvotes'], ['desc']) : sort === 'Recent' ? _.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['createdAt'], ['desc']) : _.filter(articles, (_a) => { return !_a._hide })), function (o) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'Today')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'day');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Week')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'week');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Month')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'month');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'This_Past_Year')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn moment(new Date(o.createdAt)).isSame(moment(new Date()), 'year');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (timeframe === 'All_Time')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}), (op) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!categorie)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn op.categorie === categorie;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}), (op_bytag) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!tags)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn op_bytag.tag.some(x => _.split(_.lowerCase(tags), ' ').some(_s_v => _.lowerCase(x).includes(_s_v)));\r\n\t\t\t\t\t\t\t\t\t\t\t\t}).length / todosPerPage)).keys()]).map(number => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={number + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={number + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleClickPage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={currentPage === number + 1 ? 'current' : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"shadow_page\">.{this._FormatNumberLength(number + 1, 2)}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* Modal */}\r\n\t\t\t\t\t\t<div className=\"wrapper_full\">\r\n\t\t\t\t\t\t\t<span data-heading=\"Louder.\">Louder.</span>\r\n\t\t\t\t\t\t\t<div className=\"caption\">\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-chalkboard-teacher\"></i>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"articles_slider\">\r\n\t\t\t\t\t\t\t\t<div className=\"articles_caption\">\r\n\t\t\t\t\t\t\t\t\t<h1>Youth to Speek <br /> <strong>Louder.</strong></h1>\r\n\t\t\t\t\t\t\t\t\t<button id='modal_trigger' type=\"button\">\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"attr\" data-attr-span=\"View All.\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tView All.\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"articles_slider_wrapper swiper-container\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"articles_slider_wrapper_cards swiper-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t_.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['view'], ['desc']).map((article, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"articles_slider_wrapper_cards_item swiper-slide\" data-name={moment(article.createdAt).format(\"YYYY Do MM\")} id=\"articles_slider_wrapper_cards_item\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='article_item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"col card card_\" + index} data-title={_.snakeCase(article.title)} data-index={_.add(index, 1)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"shadow_title\">{_.head(_.words(article.title))}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"shadow_letter\">{_.head(_.head(_.words(article.title)))}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<figure>{this.handleJSONTOHTMLIMAGE(article.body, index)}</figure>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted author\">by <b>{article.author}</b>, {moment(new Date(article.createdAt)).fromNow()}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>{article.title}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"categorie\">{article.categorie}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/blog/${article._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"readmore\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button data-am-linearrow=\"tooltip tooltip-bottom\" display-name=\"Read More\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"line line-1\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"line line-2\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"comments_up_down\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted views\"><b>{_.size(article.view)}</b><i className=\"fas fa-eye\"></i></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted comments\"><b>{_.size(article.comment)}</b> <i className=\"fas fa-comment-alt\"></i></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted upvotes\"><b>{_.size(article.upvotes)}</b> <i className=\"fas fa-thumbs-up\"></i></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted downvotes\"><b>{_.size(article.downvotes)}</b> <i className=\"fas fa-thumbs-down\"></i></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card_shadower\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"slider-btn btn-l swiper-button-prev\"><i className=\"fas fa-long-arrow-alt-left\"></i></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"slider-btn btn-r swiper-button-next\"><i className=\"fas fa-long-arrow-alt-right\"></i></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</Slide>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</Slide>\r\n\t\t\t</FullPage>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tarticles: state.home.articles,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonLoad: data => dispatch({ type: 'HOME_PAGE_LOADED', data }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blog);","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Post\\Post.js",["134","135","136","137","138","139","140","141","142","143"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { loadProgressBar } from 'axios-progress-bar';\r\nimport API from \"../../utils/API\";\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { FullPage, Slide } from 'react-full-page';\r\nimport 'whatwg-fetch';\r\nimport Fingerprint from 'fingerprintjs';\r\nimport Footer from '../Footer/Footer';\r\nimport * as $ from \"jquery\";\r\nimport 'bootstrap';\r\nimport 'axios-progress-bar/dist/nprogress.css';\r\nimport {\r\n\tFacebookShareButton,\r\n\tFacebookMessengerShareButton,\r\n\tFacebookMessengerIcon,\r\n\tLinkedinShareButton,\r\n\tTwitterShareButton,\r\n\tPinterestShareButton,\r\n\tWhatsappShareButton,\r\n\tEmailShareButton,\r\n\tFacebookIcon,\r\n\tTwitterIcon,\r\n\tLinkedinIcon,\r\n\tPinterestIcon,\r\n\tWhatsappIcon,\r\n\tEmailIcon\r\n} from \"react-share\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst socketURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.hostname\r\n    : 'localhost:8800';\r\n    \r\nconst socket = socketIOClient(socketURL, {'transports': ['websocket', 'polling']});\r\nvar _ = require('lodash');\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\r\n        var f = new Fingerprint().get();\r\n\t\tthis.state = {\r\n            _user: {},\r\n\t\t\t_id: '',\r\n\t\t\ttitle: '',\r\n\t\t\tbody: '',\r\n\t\t\tauthor: '',\r\n\t\t\tcategorie: '',\r\n\t\t\ttag: [],\r\n\t\t\tcomment: [],\r\n\t\t\t_comment_id_ifEditing: null,\r\n\t\t\t_comment_parent_id: null,\r\n\t\t\t_comment_author: '',\r\n\t\t\t_comment_body: '',\r\n\t\t\t_comment_fingerprint: f.toString(),\r\n\t\t\t_comment_upvotes: [],\r\n\t\t\t_comment_downvotes: [],\r\n\t\t\tupvotes: [],\r\n\t\t\tdownvotes: [],\r\n\t\t\tview: [],\r\n\t\t\tcreatedAt: '',\r\n\t\t\tfingerprint: f.toString(),\r\n\t\t}\r\n\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSubmitViews = this.handleSubmitViews.bind(this);\r\n        this.handleSubmitUpvotes = this.handleSubmitUpvotes.bind(this);\r\n        this.handleSubmitDownvotes = this.handleSubmitDownvotes.bind(this);\r\n        this.handleSubmitComments = this.handleSubmitComments.bind(this);\r\n        this.handleSubmitupvotesComment = this.handleSubmitupvotesComment.bind(this);\r\n        this.handleReply = this.handleReply.bind(this);\r\n        this.handleEditComment = this.handleEditComment.bind(this);\r\n        this.handleDeleteComment = this.handleDeleteComment.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n\t\t\r\n\t\tthis.handleJSONTOHTML = this.handleJSONTOHTML.bind(this);\r\n\t\tthis._FormatNumberLength = this._FormatNumberLength.bind(this);\r\n        this._handleMouseMove = this._handleMouseMove.bind(this);\r\n        this._handleScroll = this._handleScroll.bind(this);\r\n\t}\r\n\tcomponentWillMount() {\t\t\r\n\t\tconst { onLoad, match } = this.props;\r\n\t\tconst self = this;\r\n\r\n\t\tfunction setEditFunction() {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tself.get_user();\r\n\t\t\t\t\tsocket.on(\"USER_UPDATED_GET\", data => self.get_user());\r\n\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t}, 2000);\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetEditFunction()\r\n\t\t\t.then(() => {\r\n\t\t\t\taxios('/api/articles')\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tfunction setEditFunction() {\r\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t\tonLoad(res.data);\r\n\t\t\t\t\t\t\t\tself.handleEdit(_.find(res.data.articles, {'_id': match.params.postId}));\r\n\t\t\t\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetEditFunction()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tself.handleSubmitViews();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(err => console.log('There was an error:' + err));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log('There was an error:' + err));\r\n\t}\r\n\tcomponentDidMount() {\r\n        loadProgressBar();\r\n\t\tdocument.getElementById('articles_post').parentElement.style.height = 'initial';\r\n\t\tdocument.getElementById('comments_post').parentElement.style.height = 'initial';\r\n\t\tthis._handleMouseMove();\r\n\t\tthis._handleScroll();\r\n\t}\r\n\tasync get_user() {\r\n        const self = this;\r\n        await API.get_user(localStorage.getItem('email'))\r\n            .then((res) => {\r\n                self.setState({\r\n                    _user: res.data.user,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\tUNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.articleToEdit) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t_id: nextProps.articleToEdit._id,\r\n                title: nextProps.articleToEdit.title,\r\n                body: nextProps.articleToEdit.body,\r\n\t\t\t\tauthor: nextProps.articleToEdit.author,\r\n\t\t\t\tcategorie: nextProps.articleToEdit.categorie,\r\n                tag: nextProps.articleToEdit.tag,\r\n\t\t\t\tcomment: nextProps.articleToEdit.comment,\r\n                upvotes: nextProps.articleToEdit.upvotes,\r\n                downvotes: nextProps.articleToEdit.downvotes,\r\n\t\t\t\tview: nextProps.articleToEdit.view,\r\n\t\t\t\tcreatedAt: nextProps.articleToEdit.createdAt,\r\n\t\t\t});\r\n        }\r\n\t}\r\n    handleEdit(article) {\r\n\t\tconst { setEdit } = this.props;\r\n        setEdit(article);\r\n\t}\r\n\thandleSubmit(){\r\n        const { onEdit } = this.props;\r\n\t\tconst { _id, title, body, author, categorie, tag, comment, upvotes, downvotes, view } = this.state;\r\n\t\t\r\n        return axios.patch(`/api/articles/${_id}`, {\r\n\t\t\ttitle,\r\n\t\t\tbody,\r\n\t\t\tauthor,\r\n\t\t\tcategorie,\r\n\t\t\ttag,\r\n\t\t\tcomment,\r\n\t\t\tupvotes,\r\n\t\t\tdownvotes,\r\n\t\t\tview,\r\n\t\t})\r\n\t\t\t.then((res) => onEdit(res.data));\r\n\t}\r\n\thandleSubmitViews() {\r\n\t\tconst f = new Fingerprint().get();\r\n\t\tconst { title, view } = this.state;\r\n\t\tconst { onSubmitNotification } = this.props;\r\n\t\tconst self = this;\r\n\r\n\t\tif( _.isUndefined( _.find(view, (v) => {return v.viewer === f.toString()}) ) ) {\r\n\t\t\tself.setState(state => ({\r\n\t\t\t\tview: [...state.view, {viewer: f.toString(), _createdAt: moment().format()}],\r\n\t\t\t}), () => {\r\n\t\t\t\tself.handleSubmit()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\ttype: 'Post viewed',\r\n\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' viewed \\''+title+'\\'',\r\n\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\thandleSubmitUpvotes(event) {\r\n\t\tconst { title, upvotes, downvotes } = this.state;\r\n\t\tconst { onSubmitNotification } = this.props;\r\n        var f = new Fingerprint().get();\r\n        let target = event.target;\r\n\t\tlet self = this;\r\n\t\t\r\n\t\tif( _.isUndefined( _.find(upvotes, (u) => {return u.upvoter === f.toString()}) ) ) {\r\n\t\t\tself.setState(state => ({\r\n\t\t\t\tupvotes: [...state.upvotes, {upvoter: f.toString()}],\r\n\t\t\t}), () => {\r\n\t\t\t\tif( !_.isUndefined( _.find(downvotes, (d) => {return d.downvoter === f.toString()}) ) ) {\r\n\t\t\t\t\tlet _downvotes = _.takeWhile(downvotes, function(d) { return d.downvoter != f.toString(); });\r\n\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\tdownvotes: _downvotes,\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\ttype: 'Article upvoted',\r\n\t\t\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' upvoted \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$(target).closest(\"div\").parent().find('div.downvotes').removeClass('active');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\ttype: 'Article upvoted',\r\n\t\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' upvoted \\''+title+'\\'',\r\n\t\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t$(target).closest(\"div\").addClass('active');\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tlet _upvotes = _.takeWhile(upvotes, function(u) { return u.upvoter != f.toString(); });\r\n\t\t\tself.setState(state => ({\r\n\t\t\t\tupvotes: _upvotes,\r\n\t\t\t}), () => {\r\n\t\t\t\tself.handleSubmit()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\ttype: 'Article negative upvoted',\r\n\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' negative upvoted \\''+title+'\\'',\r\n\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t$(target).closest(\"div\").removeClass('active');\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\thandleSubmitDownvotes(event) {\r\n\t\tconst { title, downvotes, upvotes } = this.state;\r\n\t\tconst { onSubmitNotification } = this.props;\r\n        var f = new Fingerprint().get();\r\n        let target = event.target;\r\n\t\tlet self = this;\r\n\t\t\r\n\t\tif( _.isUndefined( _.find(downvotes, (d) => {return d.downvoter === f.toString()}) ) ) {\r\n\t\t\tself.setState(state => ({\r\n\t\t\t\tdownvotes: [...state.downvotes, {downvoter: f.toString()}],\r\n\t\t\t}), () => {\r\n\t\t\t\tif( !_.isUndefined( _.find(upvotes, (u) => {return u.upvoter === f.toString()}) ) ) {\r\n\t\t\t\t\tlet _upvotes = _.takeWhile(upvotes, function(u) { return u.upvoter != f.toString(); });\r\n\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\tupvotes: _upvotes,\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\ttype: 'Article downvoted',\r\n\t\t\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' downvoted \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$(target).closest(\"div\").parent().find('div.upvotes').removeClass('active');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\ttype: 'Article downvoted',\r\n\t\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' downvoted \\''+title+'\\'',\r\n\t\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t$(target).closest(\"div\").addClass('active');\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tlet _downvotes = _.takeWhile(downvotes, function(d) { return d.downvoter != f.toString(); });\r\n\t\t\tself.setState(state => ({\r\n\t\t\t\tdownvotes: _downvotes,\r\n\t\t\t}), () => {\r\n\t\t\t\tself.handleSubmit()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\ttype: 'Article negative downvoted',\r\n\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' negative downvoted \\''+title+'\\'',\r\n\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t$(target).closest(\"div\").removeClass('active');\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\thandleSubmitComments() {\r\n\t\tconst { title ,_comment_id_ifEditing, comment ,_comment_parent_id, _comment_author, _comment_body, _comment_fingerprint, _comment_upvotes, _comment_downvotes } = this.state;\r\n\t\tconst { onSubmitNotification } = this.props;\r\n\t\tconst self = this;\r\n\t\tlet _edited_comment = [];\r\n\r\n\t\tif(_comment_author && _comment_body) {\r\n\t\t\tif(_comment_id_ifEditing != null) {\r\n\t\t\t\t_edited_comment = comment;\r\n\t\t\t\tfunction setEditFunction() {\r\n\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t_edited_comment = _.map(_edited_comment, (_c) => {\r\n\t\t\t\t\t\t\t\tif(_c._id === _comment_id_ifEditing) {\r\n\t\t\t\t\t\t\t\t\t_c.author = _comment_author;\r\n\t\t\t\t\t\t\t\t\t_c.body = _comment_body;\r\n\t\t\t\t\t\t\t\t\t_c.fingerprint = _comment_fingerprint;\r\n\t\t\t\t\t\t\t\t\t_c.upvotes = _comment_upvotes;\r\n\t\t\t\t\t\t\t\t\t_c.downvotes = _comment_downvotes;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn _c;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tsetEditFunction()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tself.setState(prevState => ({\r\n\t\t\t\t\t\t\tcomment : _edited_comment\r\n\t\t\t\t\t\t}), () => {\r\n\t\t\t\t\t\t\tfunction setEditFunction() {\r\n\t\t\t\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'Comment edited',\r\n\t\t\t\t\t\t\t\t\t\t\t\tdescription: '\\''+_comment_fingerprint+'\\' edited comment \\''+_comment_id_ifEditing+'\\' on article \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\t\t\t\t\tauthor: _comment_fingerprint\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsetEditFunction()\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\t\t\t\t_comment_parent_id: null,\r\n\t\t\t\t\t\t\t\t\t\t_comment_author: '',\r\n\t\t\t\t\t\t\t\t\t\t_comment_body: '',\r\n\t\t\t\t\t\t\t\t\t\t_comment_upvotes: [],\r\n\t\t\t\t\t\t\t\t\t\t_comment_downvotes: [],\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err => console.log('There was an error:' + err));\r\n\t\t\t} else {\r\n\t\t\t\tself.setState(state => ({\r\n\t\t\t\t\tcomment: [...state.comment, {\r\n\t\t\t\t\t\tparent_id: _comment_parent_id,\r\n\t\t\t\t\t\tauthor: _comment_author,\r\n\t\t\t\t\t\tbody: _comment_body,\r\n\t\t\t\t\t\tfingerprint: _comment_fingerprint,\r\n\t\t\t\t\t\t_createdAt: moment().format(),\r\n\t\t\t\t\t\tupvotes: _comment_upvotes,\r\n\t\t\t\t\t\tdownvotes: _comment_downvotes,\r\n\t\t\t\t\t}],\r\n\t\t\t\t}), () => {\r\n\t\t\t\t\tfunction setEditFunction() {\r\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tif(_comment_parent_id != null) {\r\n\t\t\t\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\t\t\t\ttype: 'Comment submited',\r\n\t\t\t\t\t\t\t\t\t\t\tdescription: '\\''+_comment_fingerprint+'\\' replied to comment \\''+_comment_parent_id+'\\' in article \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\t\t\t\tauthor: _comment_fingerprint\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\t\t\t\ttype: 'Comment submited',\r\n\t\t\t\t\t\t\t\t\t\t\tdescription: '\\''+_comment_fingerprint+'\\' submited a comment \\''+_comment_id_ifEditing+'\\' to article \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\t\t\t\tauthor: _comment_fingerprint\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetEditFunction()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\t\t_comment_parent_id: null,\r\n\t\t\t\t\t\t\t\t_comment_author: '',\r\n\t\t\t\t\t\t\t\t_comment_body: '',\r\n\t\t\t\t\t\t\t\t_comment_upvotes: [],\r\n\t\t\t\t\t\t\t\t_comment_downvotes: [],\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(err => console.log('There was an error:' + err));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t$('#exampleModal_comment').modal('show');\r\n\t\t}\r\n\t}\r\n\thandleSubmitupvotesComment(in_comment, event) {\r\n\t\tconst { title, comment } = this.state;\r\n\t\tconst { onSubmitNotification } = this.props;\r\n\t\tvar f = new Fingerprint().get();\r\n\t\tlet self = this;\r\n\t\tlet _edited_comment = [];\r\n\t\t\r\n\t\tif( _.isUndefined( _.find(_.get(_.find(comment, {'_id': in_comment._id}), 'upvotes'), (_up) => {return _up.upvoter === f.toString()}) ) ) {\r\n\t\t\tfunction setEditFunction() {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t_edited_comment = comment;\r\n\t\t\t\t\t\t_edited_comment = _.map(_edited_comment, (_c) => {\r\n\t\t\t\t\t\t\tif(_c._id === in_comment._id) {\r\n\t\t\t\t\t\t\t\t_c.upvotes.push({\r\n\t\t\t\t\t\t\t\t\tupvoter: f.toString()\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif(!_.isUndefined(_.find(_c.downvotes, {'downvoter': f.toString()}))) {\r\n\t\t\t\t\t\t\t\t\t_c.downvotes = _.takeWhile(_c.downvotes, function(d) { return d.downvoter != f.toString(); });\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn _c;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetEditFunction()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tself.setState(prevState => ({\r\n\t\t\t\t\t\tcomment : _edited_comment\r\n\t\t\t\t\t}), () => {\r\n\t\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\ttype: 'Comment upvoted',\r\n\t\t\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' upvoted a comment \\''+in_comment._id+'\\' to article \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log('There was an error:' + err));\r\n\t\t} else {\r\n\t\t\tfunction setEditFunction() {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t_edited_comment = comment;\r\n\t\t\t\t\t\t_edited_comment = _.map(_edited_comment, (_c) => {\r\n\t\t\t\t\t\t\tif(_c._id === in_comment._id) {\r\n\t\t\t\t\t\t\t\t_c.upvotes = _.takeWhile(_c.upvotes, function(u) { return u.upvoter != f.toString(); });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn _c;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetEditFunction()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tself.setState(prevState => ({\r\n\t\t\t\t\t\tcomment : _edited_comment\r\n\t\t\t\t\t}), () => {\r\n\t\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\ttype: 'Comment negative upvoted',\r\n\t\t\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' negative upvoted a comment \\''+in_comment._id+'\\' to article \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log('There was an error:' + err));\r\n\t\t}\r\n\t}\r\n\thandleSubmitdownvotesComment(in_comment, event) {\r\n\t\tconst { title, comment } = this.state;\r\n\t\tconst { onSubmitNotification } = this.props;\r\n\t\tvar f = new Fingerprint().get();\r\n\t\tlet self = this;\r\n\t\tlet _edited_comment = [];\r\n\t\t\r\n\t\tif( _.isUndefined( _.find(_.get(_.find(comment, {'_id': in_comment._id}), 'downvotes'), (_do) => {return _do.downvoter === f.toString()}) ) ) {\r\n\t\t\tfunction setEditFunction() {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t_edited_comment = comment;\r\n\t\t\t\t\t\t_edited_comment = _.map(_edited_comment, (_c) => {\r\n\t\t\t\t\t\t\tif(_c._id === in_comment._id) {\r\n\t\t\t\t\t\t\t\t_c.downvotes.push({\r\n\t\t\t\t\t\t\t\t\tdownvoter: f.toString()\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif(!_.isUndefined(_.find(_c.upvotes, {'upvoter': f.toString()}))) {\r\n\t\t\t\t\t\t\t\t\t_c.upvotes = _.takeWhile(_c.upvotes, function(u) { return u.upvoter != f.toString(); });\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn _c;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetEditFunction()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tself.setState(prevState => ({\r\n\t\t\t\t\t\tcomment : _edited_comment\r\n\t\t\t\t\t}), () => {\r\n\t\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\ttype: 'Comment downvoted',\r\n\t\t\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' downvoted a comment \\''+in_comment._id+'\\' to article \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log('There was an error:' + err));\r\n\t\t} else {\r\n\t\t\tfunction setEditFunction() {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t_edited_comment = comment;\r\n\t\t\t\t\t\t_edited_comment = _.map(_edited_comment, (_c) => {\r\n\t\t\t\t\t\t\tif(_c._id === in_comment._id) {\r\n\t\t\t\t\t\t\t\t_c.downvotes = _.takeWhile(_c.downvotes, function(d) { return d.downvoter != f.toString(); });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn _c;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttrue ? resolve('Success') : reject('Error');\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetEditFunction()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tself.setState(prevState => ({\r\n\t\t\t\t\t\tcomment : _edited_comment\r\n\t\t\t\t\t}), () => {\r\n\t\t\t\t\t\tself.handleSubmit()\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\t\t\t\ttype: 'Comment negative downvoted',\r\n\t\t\t\t\t\t\t\tdescription: '\\''+f.toString()+'\\' negative downvoted a comment \\''+in_comment._id+'\\' to article \\''+title+'\\'',\r\n\t\t\t\t\t\t\t\tauthor: f.toString()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log('There was an error:' + err));\r\n\t\t}\r\n\t}\r\n\thandleReply(_id) {\r\n        this.setState({\r\n            _comment_parent_id: _id\r\n        }, () => {\r\n            $('textarea._comment_body').focus();\r\n        });\r\n\t}\r\n\thandleEditComment(in_comment) {\r\n\t\tthis.setState({\r\n            _comment_id_ifEditing: in_comment._id,\r\n\t\t\t_comment_parent_id: in_comment.parent_id,\r\n\t\t\t_comment_author: in_comment.author,\r\n\t\t\t_comment_body: in_comment.body,\r\n\t\t\t_comment_fingerprint: in_comment.fingerprint,\r\n\t\t\t_comment_upvotes: in_comment.upvotes,\r\n\t\t\t_comment_downvotes: in_comment.downvotes,\r\n        }, () => {\r\n            $('textarea._comment_body').focus();\r\n        });\r\n\t}\r\n\thandleDeleteComment(_in_id) {\r\n\t\tconst self = this;\r\n\t\tconst { fingerprint, title, comment } = this.state;\r\n\t\tconst { onSubmitNotification } = this.props;\r\n\r\n\t\tself.setState(state => ({\r\n\t\t\tcomment: _.takeWhile(comment, (_c) => { return _c._id != _in_id }),\r\n\t\t}), () => {\r\n\t\t\tself.handleSubmit()\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn axios.post('/api/notifications', {\r\n\t\t\t\t\ttype: 'Comment deleted',\r\n\t\t\t\t\tdescription: '\\''+fingerprint+'\\' deleted a comment \\''+_in_id+'\\' to article \\''+title+'\\'',\r\n\t\t\t\t\tauthor: fingerprint\r\n\t\t\t\t})\r\n\t\t\t\t.then((res_n) => onSubmitNotification(res_n.data))\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n    handleChangeField(key, event) {\r\n        this.setState({\r\n            [key]: event.target.value,\r\n        });\r\n    }\r\n\t\r\n\thandleJSONTOHTML(inputDelta) {\r\n\t\tfunction runAfterElementExists(jquery_selector, callback){\r\n\t\t\tvar checker = window.setInterval(function() {\r\n\t\t\tif (jquery_selector) {\r\n\t\t\t\tclearInterval(checker);\r\n\t\t\t\tcallback();\r\n\t\t\t}}, 200);\r\n\t\t}\r\n\t\trunAfterElementExists(inputDelta, function() {\r\n\t\t\tconst html = $.parseHTML(inputDelta);\r\n\t\t\t$('h6.body_article').html(html);\r\n\t\t});\r\n\t}\r\n\t_FormatNumberLength(num, length) {\r\n\t\tvar r = \"\" + num;\r\n\t\twhile (r.length < length) {\r\n\t\t\tr = \"0\" + r;\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n\t_handleMouseMove() {\r\n        $('.first_section_post').mousemove(function(e){\r\n            var width = $(this).width() / 2;\r\n            var height = $(this).height() / 2;\r\n            var amountMovedX = ((width - e.pageX) * 1 / 16);\r\n            var amountMovedY = ((height - e.pageY) * 1 / 16);\r\n            \r\n            $('.first_section_post .shadow_letter').css('right', amountMovedX);\r\n            $('.first_section_post .shadow_letter').css('top', amountMovedY);\r\n        });\r\n\t}\r\n    _handleScroll(){\r\n        $(window).scroll(function() {\r\n            if ($(document).height() - $(window).height() - $(window).scrollTop() === 0){\r\n                $('.fixedHeaderContainer').addClass('blog_header');\r\n            }\r\n            else{\r\n                $('.fixedHeaderContainer').removeClass('blog_header');\r\n            }\r\n        });\r\n\t}\r\n\t\r\n    render() {\r\n\t\tconst { articles } = this.props;\r\n        const { _user, _id, title, body, author, comment, _comment_author, _comment_body, _comment_fingerprint, upvotes, downvotes, view, createdAt, fingerprint } = this.state;\r\n\t\tconst shareUrl = window.location.href;\r\n\t\t\r\n\t\treturn (\r\n            <FullPage scrollMode={'normal'}>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<section id='articles_post' className=\"active first_section_post\">\r\n\t\t\t\t\t\t<div className=\"modal fade\" id=\"exampleModal_comment\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModal_commentLabel\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t<div className=\"modal-dialog\" role=\"document\">\r\n\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"# \" title=\"Close\" className=\"modal-close\" data-dismiss=\"modal\">Close</a>\r\n\t\t\t\t\t\t\t\t\t\t<div><span role=\"img\" aria-label=\"sheep\">👉</span> Please provide your name and the content of ur msg.</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"modal fade\" id=\"shareModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"shareModalLabel\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t<div className=\"modal-dialog\" role=\"document\">\r\n\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"# \" title=\"Close\" className=\"modal-close\" data-dismiss=\"modal\">Close</a>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<FacebookShareButton\r\n\t\t\t\t\t\t\t\t\t\t\t\turl={shareUrl}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"Demo__some-network__share-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FacebookIcon size={32} round />\r\n\t\t\t\t\t\t\t\t\t\t\t</FacebookShareButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<FacebookMessengerShareButton\r\n\t\t\t\t\t\t\t\t\t\t\t\turl={shareUrl}\r\n\t\t\t\t\t\t\t\t\t\t\t\tappId=\"521270401588372\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"Demo__some-network__share-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FacebookMessengerIcon size={32} round />\r\n\t\t\t\t\t\t\t\t\t\t\t</FacebookMessengerShareButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<TwitterShareButton\r\n\t\t\t\t\t\t\t\t\t\t\t\turl={shareUrl}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"Demo__some-network__share-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TwitterIcon size={32} round />\r\n\t\t\t\t\t\t\t\t\t\t\t</TwitterShareButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<WhatsappShareButton\r\n\t\t\t\t\t\t\t\t\t\t\t\turl={shareUrl}\r\n\t\t\t\t\t\t\t\t\t\t\t\tseparator=\":: \"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"Demo__some-network__share-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<WhatsappIcon size={32} round />\r\n\t\t\t\t\t\t\t\t\t\t\t</WhatsappShareButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<LinkedinShareButton url={shareUrl} className=\"Demo__some-network__share-button\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<LinkedinIcon size={32} round />\r\n\t\t\t\t\t\t\t\t\t\t\t</LinkedinShareButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<PinterestShareButton\r\n\t\t\t\t\t\t\t\t\t\t\t\turl={String(window.location)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"Demo__some-network__share-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<PinterestIcon size={32} round />\r\n\t\t\t\t\t\t\t\t\t\t\t</PinterestShareButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<EmailShareButton\r\n\t\t\t\t\t\t\t\t\t\t\t\turl={shareUrl}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbody=\"body\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"Demo__some-network__share-button\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<EmailIcon size={32} round />\r\n\t\t\t\t\t\t\t\t\t\t\t</EmailShareButton>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"wrapper_full\">\r\n\t\t\t\t\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"breadcrumb-item\"><a href=\"/\">home</a></li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"breadcrumb-item\"><a href=\"/blog\">blog</a></li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">{title}</li>\r\n\t\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\t<div className=\"shadow_title\">{_.head(_.words(title))}.</div>\r\n\t\t\t\t\t\t\t<div className=\"shadow_letter\">{this._FormatNumberLength(_.indexOf(_.orderBy(articles, ['createdAt'], ['desc']), _.find(articles, {'_id': _id})), 2)}.</div>\r\n\t\t\t\t\t\t\t<div id=\"box\">\r\n\t\t\t\t\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t\t\t\t\t<p className=\"text-muted author\">by <b>{author}</b>, {moment(new Date(createdAt)).fromNow()}</p>\r\n\t\t\t\t\t\t\t\t<h6 className=\"text-muted body body_article\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.handleJSONTOHTML(body)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t<div className=\"comments_up_down\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-muted views\"><b>{_.size(view)}</b><i className=\"fas fa-eye\"></i></p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-muted comments\"><b>{_.size(comment)}</b> <a href=\"#comments-modal\"><i className=\"fas fa-comment-alt\"></i></a> </p>\r\n\t\t\t\t\t\t\t\t\t<div className={`text-muted upvotes ${_.isUndefined( _.find(upvotes, (upvote) => {return upvote.upvoter === fingerprint}) ) ? '' : 'active'}`}><b>{_.size(upvotes)}</b> <button onClick={(event) => this.handleSubmitUpvotes(event)}><i className=\"fas fa-thumbs-up\"></i></button> </div>\r\n\t\t\t\t\t\t\t\t\t<div className={`text-muted downvotes ${_.isUndefined( _.find(downvotes, (downvote) => {return downvote.downvoter === fingerprint}) ) ? '' : 'active'}`}><b>{_.size(downvotes)}</b> <button onClick={(event) => this.handleSubmitDownvotes(event)}><i className=\"fas fa-thumbs-down\"></i></button> </div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-muted share\"> <button data-toggle=\"modal\" data-target=\"#shareModal\"><i className=\"fas fa-share\"></i></button> </div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"beforeorafter\">\r\n\t\t\t\t\t\t\t\t<a href={_.get(_.orderBy(articles, ['view'], ['desc'])[_.indexOf(_.orderBy(articles, ['view'], ['desc']), _.find(articles, {'_id': _id}))-1], '_id', _.get(_.last(_.orderBy(articles, ['view'], ['desc'])), '_id'))} className=\"before_article\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t_.get(_.orderBy(articles, ['view'], ['desc'])[_.indexOf(_.orderBy(articles, ['view'], ['desc']), _.find(articles, {'_id': _id}))-1], 'title', _.get(_.last(_.orderBy(articles, ['view'], ['desc'])), 'title'))\r\n\t\t\t\t\t\t\t\t\t}.\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<a href={_.get(_.orderBy(articles, ['view'], ['desc'])[_.indexOf(_.orderBy(articles, ['view'], ['desc']), _.find(articles, {'_id': _id}))+1], '_id', _.get(_.last(_.orderBy(articles, ['view'], ['desc'])), '_id'))} className=\"after_article\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t_.get(_.orderBy(articles, ['view'], ['desc'])[_.indexOf(_.orderBy(articles, ['view'], ['desc']), _.find(articles, {'_id': _id}))+1], 'title', _.get(_.head(_.orderBy(articles, ['view'], ['desc'])), 'title'))\r\n\t\t\t\t\t\t\t\t\t}.\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</Slide>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<section id='comments_post' className=\"second_section_post\">\r\n\t\t\t\t\t\t<div className=\"wrapper_full\">\r\n\t\t\t\t\t\t\t<div className=\"comment-modal\">\r\n\t\t\t\t\t\t\t\t<div className=\"modal-inner\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field col s12\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<textarea \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => this.handleChangeField('_comment_body', ev)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={_comment_body}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"validate form-group-input materialize-textarea _comment_body\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"_comment_body\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"_comment_body\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='_comment_body' className={_comment_body ? 'active' : ''}>Leave a comment.</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line textarea_line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field col s6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => this.handleChangeField('_comment_author', ev)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={_comment_author}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"validate form-group-input _comment_author\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"_comment_author\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"_comment_author\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='_comment_author' className={_comment_author ? 'active' : ''}>your name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group-line\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-field col s6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={(event) => this.handleSubmitComments(event)} className=\"btn btn-primary pull-right\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span data-attr-span=\"Leave a Comment.\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLeave a Comment.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"comments-modal\" className=\"comments-modal\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-inner\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_.orderBy(_.filter(comment, { parent_id: null }), ['upvotes'], ['desc']).map((_c, _i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={_i} className={\"card card_\" + _i} data-index={_i+1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"shadow_title\">{_.head(_.words(_c.body))}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"top_row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"author\">by <b>{_c.author}</b></h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted fromNow\">{moment(new Date(_c._createdAt)).fromNow()}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"up_down\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-muted upvotes ${_.isUndefined( _.find(_c.upvotes, (_up) => {return _up.upvoter === _comment_fingerprint}) ) ? '' : 'active'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{_.size(_c.upvotes)}</b> \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={(event) => this.handleSubmitupvotesComment(_c, event)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-thumbs-up\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-muted downvotes ${_.isUndefined( _.find(_c.downvotes, (_do) => {return _do.downvoter === _comment_fingerprint}) ) ? '' : 'active'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{_.size(_.get(_c, 'downvotes'))}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={(ev) => this.handleSubmitdownvotesComment(_c, ev)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-thumbs-down\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"middle_row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>{_c.body}</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bottom_row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"crud\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-ellipsis-v dropdown-toggle\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.handleReply(_c._id)} className=\"dropdown-item\" type=\"button\">Reply</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_c.fingerprint === _comment_fingerprint || _.includes(_user.roles, 'admin')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? <>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.handleEditComment(_c)} className=\"dropdown-item\">Edit</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.handleDeleteComment(_c._id)} className=\"dropdown-item\">Delete</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_.orderBy(_.reject(comment, { parent_id: null }), ['upvotes'], ['desc']).map((_c_reply, _i_reply) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(_c_reply.parent_id === _c._id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={_i_reply+'_'+_i} className={\"card card_\" + _i_reply} data-index={_i_reply+1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"shadow_title\">{_.head(_.words(_c_reply.body))}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"top_row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"author\">by <b>{_c_reply.author}</b></h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted fromNow\">{moment(new Date(_c_reply.createdAt)).fromNow()}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"up_down\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-muted upvotes ${_.isUndefined( _.find(_c_reply.upvotes, (_up_reply) => {return _up_reply.upvoter === _comment_fingerprint}) ) ? '' : 'active'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{_.size(_c_reply.upvotes)}</b> \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={(ev) => this.handleSubmitupvotesComment(_c_reply, ev)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-thumbs-up\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-muted downvotes ${_.isUndefined( _.find(_c_reply.downvotes, (_do_reply) => {return _do_reply.downvoter === _comment_fingerprint}) ) ? '' : 'active'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{_.size(_c_reply.downvotes)}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={(ev) => this.handleSubmitdownvotesComment(_c_reply, ev)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-thumbs-down\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"middle_row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>{_c_reply.body}</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_c_reply.fingerprint === _comment_fingerprint || _.includes(_user.roles, 'admin')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bottom_row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"crud\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-ellipsis-v dropdown-toggle\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.handleEditComment(_c_reply)} className=\"dropdown-item\">Edit</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-divider\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.handleDeleteComment(_c_reply._id)} className=\"dropdown-item\">Delete</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</Slide>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<Footer/>\r\n\t\t\t\t</Slide>\r\n            </FullPage>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tarticles: state.home.articles,\r\n\tarticleToEdit: state.home.articleToEdit,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonSubmit: data => dispatch({ type: 'SUBMIT_ARTICLE', data }),\r\n\tonLoad: data => dispatch({ type: 'HOME_PAGE_LOADED', data }),\r\n\tonDelete: id => dispatch({ type: 'DELETE_ARTICLE', id }),\r\n\tonEdit: data => dispatch({ type: 'EDIT_ARTICLE', data }),\r\n\tsetEdit: article => dispatch({ type: 'SET_EDIT', article }),\r\n\r\n    onSubmitNotification: data => dispatch({ type: 'SUBMIT_NOTIFICATION', data }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\ContactMe\\ContactMe.js",["144","145"],"import React from 'react';\r\nimport { FullPage, Slide } from 'react-full-page';\r\nimport 'whatwg-fetch';\r\nimport Footer from '../Footer/Footer';\r\nimport * as $ from \"jquery\";\r\nimport jQuery from 'jquery';\r\nimport 'bootstrap';\r\n\r\nclass ContactMe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleGradient = this.handleGradient.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        //this.handleGradient();\r\n    }\r\n    handleClick(href) {\r\n        $('html,body').animate({scrollTop: $('#'+href).offset().top}, 200, function() {\r\n            $('#mail_content').focus();\r\n        });\r\n    }\r\n    handleGradient() {\r\n        var colors = new Array(\r\n            [45, 45, 45],\r\n            [40, 40, 40],\r\n            [35, 35, 35],\r\n            [30, 30, 30],\r\n            [25, 25, 25],\r\n            [20, 20, 20]\r\n        );\r\n          \r\n        var step = 0;\r\n        // color table indices for: \r\n        // current color left\r\n        // next color left\r\n        // current color right\r\n        // next color right\r\n        var colorIndices = [0,1,2,3];\r\n          \r\n        //transition speed\r\n        var gradientSpeed = 0.05;\r\n          \r\n        function updateGradient() {\r\n            \r\n            if ( $===undefined ) return;\r\n            \r\n            var c0_0 = colors[colorIndices[0]];\r\n            var c0_1 = colors[colorIndices[1]];\r\n            var c1_0 = colors[colorIndices[2]];\r\n            var c1_1 = colors[colorIndices[3]];\r\n            \r\n            var istep = 1 - step;\r\n            var r1 = Math.round(istep * c0_0[0] + step * c0_1[0]);\r\n            var g1 = Math.round(istep * c0_0[1] + step * c0_1[1]);\r\n            var b1 = Math.round(istep * c0_0[2] + step * c0_1[2]);\r\n            var color1 = \"rgb(\"+r1+\",\"+g1+\",\"+b1+\")\";\r\n            \r\n            var r2 = Math.round(istep * c1_0[0] + step * c1_1[0]);\r\n            var g2 = Math.round(istep * c1_0[1] + step * c1_1[1]);\r\n            var b2 = Math.round(istep * c1_0[2] + step * c1_1[2]);\r\n            var color2 = \"rgb(\"+r2+\",\"+g2+\",\"+b2+\")\";\r\n          \r\n            $('#gradient').css({\r\n                borderColor: \"-webkit-gradient(linear, left top, right top, from(\"+color1+\"), to(\"+color2+\"))\"\r\n            }).css({\r\n                background: \"-moz-linear-gradient(left, \"+color1+\" 0%, \"+color2+\" 100%)\"\r\n            });\r\n            \r\n            step += gradientSpeed;\r\n            if ( step >= 1 ) {\r\n                step %= 1;\r\n                colorIndices[0] = colorIndices[1];\r\n                colorIndices[2] = colorIndices[3];\r\n                \r\n                //pick two new target color indices\r\n                //do not pick the same as the current one\r\n                colorIndices[1] = ( colorIndices[1] + Math.floor( 1 + Math.random() * (colors.length - 1))) % colors.length;\r\n                colorIndices[3] = ( colorIndices[3] + Math.floor( 1 + Math.random() * (colors.length - 1))) % colors.length;\r\n            }\r\n        }\r\n          \r\n        setInterval(updateGradient,10);\r\n    }\r\n    render() {\r\n        return (\r\n            <FullPage scrollMode={'normal'}>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<section className=\"first_section_contact\">\r\n                        <div className=\"wrapper_full\" id=\"gradient\">\r\n\t\t\t\t\t\t\t<div id=\"social_media\">\r\n                                <div className=\"icons_gatherer\">\r\n                                    <a href=\"https://dribbble.com/boutaleblcoder\" className=\"icon-button dribbble\"><i className=\"fab fa-dribbble\"></i><span></span></a>\r\n                                    <a href=\"https://www.behance.net/boutaleblcoder/\" className=\"icon-button behance\"><i className=\"fab fa-behance\"></i><span></span></a>\r\n                                    <a href=\"https://www.linkedin.com/in/zakariae-bou-taleb-657953122/\" className=\"icon-button linkedin\"><i className=\"fab fa-linkedin-in\"></i><span></span></a>\r\n                                    <a href=\"https://www.instagram.com/boutaleblcoder/\" className=\"icon-button instagram\"><i className=\"fab fa-instagram\"></i><span></span></a>\r\n                                    <a href=\"https://fb.me/boutaleblcoder\" className=\"icon-button facebook\"><i className=\"icon-facebook\"></i><span></span></a>\r\n                                    <a href=\"# \" className=\"icon-button scroll\">\r\n                                        \r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text\">\r\n                                <div className=\"scene\">\r\n                                    <div className=\"cube\">\r\n                                        <div className=\"cube__face cube__face--front\"></div>\r\n                                        <div className=\"cube__face cube__face--back\"></div>\r\n                                        <div className=\"cube__face cube__face--right\"></div>\r\n                                        <div className=\"cube__face cube__face--left\"></div>\r\n                                        <div className=\"cube__face cube__face--top\"></div>\r\n                                        <div className=\"cube__face cube__face--bottom\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"email_me\">\r\n                                    <h6>For Inquiries</h6>\r\n                                    <button id=\"reach_out_button\" onClick={() => this.handleClick('footer_to')} type=\"button\">\r\n                                        <span>\r\n                                            <span>\r\n                                                <span data-attr-span=\"Reach Out.\">\r\n                                                    Reach Out.\r\n                                                </span>\r\n                                            </span>\r\n                                        </span>\r\n                                    </button>\r\n                                </div>\r\n                                <h1 className=\"talk_to_me\">Talk To Me Now.</h1>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\t\t\t\t</Slide>\r\n\t\t\t\t<Slide>\r\n\t\t\t\t\t<Footer/>\r\n\t\t\t\t</Slide>\r\n            </FullPage>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default ContactMe","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Home\\Home.js",["146","147","148","149","150","151","152","153","154"],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\About\\About.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Confirmation\\Confirmation.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Minttea\\Minttea.js",["155","156","157","158"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { FullPage, Slide } from 'react-full-page';\r\nimport Footer from '../Footer/Footer';\r\nimport Fingerprint from 'fingerprintjs';\r\nimport * as $ from \"jquery\";\r\nimport 'bootstrap';\r\n\r\nvar _ = require('lodash');\r\n\r\nclass Minttea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var f = new Fingerprint().get();\r\n        this.state = {\r\n            parent_id: null,\r\n            author: '',\r\n            body: '',\r\n            is_private: false,\r\n            fingerprint: f.toString(),\r\n            upvotes: [],\r\n            downvotes: [],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.handleSubmitupvotesTestimony = this.handleSubmitupvotesTestimony.bind(this);\r\n        this.handleSubmitdownvotesTestimony = this.handleSubmitdownvotesTestimony.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleReply = this.handleReply.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        const { onLoadTestimony } = this.props;\r\n        axios('/api/testimonies')\r\n            .then((response) => {\r\n                onLoadTestimony(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        document.getElementsByClassName('first_section_coffee')[0].parentElement.style.height = 'initial';\r\n        document.getElementsByClassName('first_section_coffee')[0].parentElement.style.minHeight = '100%';\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps.testimonyToEdit) {\r\n            this.setState({\r\n                parent_id: nextProps.testimonyToEdit.parent_id,\r\n                body: nextProps.testimonyToEdit.body,\r\n                author: nextProps.testimonyToEdit.author,\r\n                is_private: nextProps.testimonyToEdit.is_private,\r\n                fingerprint: nextProps.testimonyToEdit.fingerprint,\r\n                upvotes: nextProps.testimonyToEdit.upvotes,\r\n                downvotes: nextProps.testimonyToEdit.downvotes,\r\n            });\r\n        }\r\n    }\r\n    handleSubmitupvotesTestimony(testimony, event) {\r\n        const { onSubmitNotification } = this.props;\r\n        var f = new Fingerprint().get();\r\n        let self = this;\r\n        let target = event.target;\r\n        if (_.isUndefined(_.find(_.get(testimony, 'upvotes'), (upvote) => { return upvote.upvoter === f.toString() }))) {\r\n            function setEditFunction() {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(function () {\r\n                        self.handleEdit(testimony);\r\n                        true ? resolve('Success') : reject('Error');\r\n                    }, 2000);\r\n                })\r\n            }\r\n            setEditFunction()\r\n                .then(() => {\r\n                    self.setState(state => ({\r\n                        upvotes: [...state.upvotes, { upvoter: f.toString() }],\r\n                    }), () => {\r\n                        if (!_.isUndefined(_.find(_.get(testimony, 'downvotes'), (downvote) => { return downvote.downvoter === f.toString() }))) {\r\n                            let _downvotes = _.takeWhile(self.state.downvotes, function (o) { return o.downvoter != f.toString(); });\r\n                            self.setState({\r\n                                downvotes: _downvotes,\r\n                            }, () => {\r\n                                self.handleSubmit()\r\n                                    .then(() => {\r\n                                        return axios.post('/api/notifications', {\r\n                                            type: 'Testimony upvoted',\r\n                                            description: '\\'' + f.toString() + '\\' upvoted \\'' + testimony._id + '\\'',\r\n                                            author: f.toString()\r\n                                        })\r\n                                            .then((res_n) => onSubmitNotification(res_n.data))\r\n                                            .catch(error => {\r\n                                                console.log(error)\r\n                                            });\r\n                                    });\r\n                            });\r\n                            $(target).closest(\"div\").parent().find('div.downvotes').removeClass('active');\r\n                        } else {\r\n                            self.handleSubmit()\r\n                                .then(() => {\r\n                                    return axios.post('/api/notifications', {\r\n                                        type: 'Testimony upvoted',\r\n                                        description: '\\'' + f.toString() + '\\' upvoted \\'' + testimony._id + '\\'',\r\n                                        author: f.toString()\r\n                                    })\r\n                                        .then((res_n) => onSubmitNotification(res_n.data))\r\n                                        .catch(error => {\r\n                                            console.log(error)\r\n                                        });\r\n                                });\r\n                        }\r\n                        $(target).closest(\"div\").addClass('active');\r\n                    });\r\n                    return true;\r\n                })\r\n                .catch(err => console.log('There was an error:' + err));\r\n        } else {\r\n            function setEditFunction() {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(function () {\r\n                        self.handleEdit(testimony);\r\n                        true ? resolve('Success') : reject('Error');\r\n                    }, 2000);\r\n                })\r\n            }\r\n            setEditFunction()\r\n                .then(() => {\r\n                    let _upvotes = _.takeWhile(self.state.upvotes, function (o) { return o.upvoter != f.toString(); });\r\n                    self.setState(state => ({\r\n                        upvotes: _upvotes,\r\n                    }), () => {\r\n                        self.handleSubmit()\r\n                            .then(() => {\r\n                                return axios.post('/api/notifications', {\r\n                                    type: 'Testimony negative upvoted',\r\n                                    description: '\\'' + f.toString() + '\\' negative upvoted \\'' + testimony._id + '\\'',\r\n                                    author: f.toString()\r\n                                })\r\n                                    .then((res_n) => onSubmitNotification(res_n.data))\r\n                                    .catch(error => {\r\n                                        console.log(error)\r\n                                    });\r\n                            });\r\n                        $(target).closest(\"div\").removeClass('active');\r\n                    });\r\n                    return true;\r\n                })\r\n                .catch(err => console.log('There was an error:' + err));\r\n        }\r\n    }\r\n    handleSubmitdownvotesTestimony(testimony, event) {\r\n        const { onSubmitNotification } = this.props;\r\n        var f = new Fingerprint().get();\r\n        let self = this;\r\n        let target = event.target;\r\n        if (_.isUndefined(_.find(_.get(testimony, 'downvotes'), (downvote) => { return downvote.downvoter === f.toString() }))) {\r\n            function setEditFunction() {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(function () {\r\n                        self.handleEdit(testimony);\r\n                        true ? resolve('Success') : reject('Error');\r\n                    }, 2000);\r\n                })\r\n            }\r\n            setEditFunction()\r\n                .then(() => {\r\n                    self.setState(state => ({\r\n                        downvotes: [...state.downvotes, { downvoter: f.toString() }],\r\n                    }), () => {\r\n                        if (!_.isUndefined(_.find(_.get(testimony, 'upvotes'), (upvote) => { return upvote.upvoter === f.toString() }))) {\r\n                            let _upvotes = _.takeWhile(self.state.upvotes, function (o) { return o.upvoter != f.toString(); });\r\n                            self.setState({\r\n                                upvotes: _upvotes,\r\n                            }, () => {\r\n                                self.handleSubmit()\r\n                                    .then(() => {\r\n                                        return axios.post('/api/notifications', {\r\n                                            type: 'Testimony downvoted',\r\n                                            description: '\\'' + f.toString() + '\\' downvoted \\'' + testimony._id + '\\'',\r\n                                            author: f.toString()\r\n                                        })\r\n                                            .then((res_n) => onSubmitNotification(res_n.data))\r\n                                            .catch(error => {\r\n                                                console.log(error)\r\n                                            });\r\n                                    });\r\n                            });\r\n                            $(target).closest(\"div\").parent().find('div.upvotes').removeClass('active');\r\n                        } else {\r\n                            self.handleSubmit()\r\n                                .then(() => {\r\n                                    return axios.post('/api/notifications', {\r\n                                        type: 'Testimony downvoted',\r\n                                        description: '\\'' + f.toString() + '\\' downvoted \\'' + testimony._id + '\\'',\r\n                                        author: f.toString()\r\n                                    })\r\n                                        .then((res_n) => onSubmitNotification(res_n.data))\r\n                                        .catch(error => {\r\n                                            console.log(error)\r\n                                        });\r\n                                })\r\n                        }\r\n                        $(target).closest(\"div\").addClass('active');\r\n                    });\r\n                    return true;\r\n                })\r\n                .catch(err => console.log('There was an error:' + err));\r\n        } else {\r\n            function setEditFunction() {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(function () {\r\n                        self.handleEdit(testimony);\r\n                        true ? resolve('Success') : reject('Error');\r\n                    }, 2000);\r\n                })\r\n            }\r\n            setEditFunction()\r\n                .then(() => {\r\n                    let _downvotes = _.takeWhile(self.state.downvotes, function (o) { return o.downvoter != f.toString(); });\r\n                    self.setState(state => ({\r\n                        downvotes: _downvotes,\r\n                    }), () => {\r\n                        self.handleSubmit()\r\n                            .then(() => {\r\n                                return axios.post('/api/notifications', {\r\n                                    type: 'Testimony negative downvoted',\r\n                                    description: '\\'' + f.toString() + '\\' negative downvoted \\'' + testimony._id + '\\'',\r\n                                    author: f.toString()\r\n                                })\r\n                                    .then((res_n) => onSubmitNotification(res_n.data))\r\n                                    .catch(error => {\r\n                                        console.log(error)\r\n                                    });\r\n                            });\r\n                        $(target).closest(\"div\").removeClass('active');\r\n                    });\r\n                    return true;\r\n                })\r\n                .catch(err => console.log('There was an error:' + err));\r\n        }\r\n    }\r\n    handleDelete(id) {\r\n        const { onDeleteTestimony, onSubmitNotification } = this.props;\r\n        const { fingerprint } = this.state;\r\n        return axios.delete(`/api/testimonies/${id}`)\r\n            .then(() => {\r\n                onDeleteTestimony(id);\r\n                return axios.post('/api/notifications', {\r\n                    type: 'Testimony Deleted',\r\n                    description: 'Testimony \\'' + id + '\\' Deleted.',\r\n                    author: fingerprint\r\n                })\r\n                    .then((res_n) => onSubmitNotification(res_n.data))\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    });\r\n            });\r\n    }\r\n    handleEdit(testimony) {\r\n        const { setEditTestimony } = this.props;\r\n        setEditTestimony(testimony);\r\n    }\r\n    handleReply(testimony_id) {\r\n        let self = this;\r\n        self.setState({\r\n            parent_id: testimony_id\r\n        }, () => {\r\n            $('input.author').focus();\r\n        });\r\n    }\r\n    handleSubmit() {\r\n        const { onSubmitTestimony, testimonyToEdit, onEditTestimony, onSubmitNotification } = this.props;\r\n        const { parent_id, body, author, is_private, fingerprint, upvotes, downvotes } = this.state;\r\n\r\n        if (!testimonyToEdit) {\r\n            return axios.post('/api/testimonies', {\r\n                parent_id,\r\n                body,\r\n                author,\r\n                is_private,\r\n                fingerprint,\r\n                upvotes,\r\n                downvotes,\r\n            })\r\n                .then((res) => {\r\n                    onSubmitTestimony(res.data);\r\n                    if (parent_id != null) {\r\n                        return axios.post('/api/notifications', {\r\n                            type: 'Testimony Replied To',\r\n                            description: '\\'' + fingerprint + '\\' replied to \\'' + parent_id + '\\'',\r\n                            author: fingerprint\r\n                        })\r\n                            .then((res_n) => onSubmitNotification(res_n.data))\r\n                            .catch(error => {\r\n                                console.log(error)\r\n                            });\r\n                    } else {\r\n                        return axios.post('/api/notifications', {\r\n                            type: 'Testimony Created',\r\n                            description: '\\'' + fingerprint + '\\' created \\'' + res.data.testimony._id + '\\'',\r\n                            author: fingerprint\r\n                        })\r\n                            .then((res_n) => onSubmitNotification(res_n.data))\r\n                            .catch(error => {\r\n                                console.log(error)\r\n                            });\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    this.setState({\r\n                        parent_id: null,\r\n                        author: '',\r\n                        body: '',\r\n                        is_private: false,\r\n                        upvotes: [],\r\n                        downvotes: [],\r\n                    })\r\n                });\r\n        } else {\r\n            return axios.patch(`/api/testimonies/${testimonyToEdit._id}`, {\r\n                parent_id,\r\n                body,\r\n                author,\r\n                is_private,\r\n                fingerprint,\r\n                upvotes,\r\n                downvotes,\r\n            })\r\n                .then((res) => {\r\n                    onEditTestimony(res.data);\r\n                })\r\n                .then(() => {\r\n                    this.setState({\r\n                        parent_id: null,\r\n                        author: '',\r\n                        body: '',\r\n                        is_private: false,\r\n                        upvotes: [],\r\n                        downvotes: [],\r\n                    })\r\n                });\r\n        }\r\n    }\r\n    handleChange(key, event) {\r\n        this.setState({\r\n            [key]: event.target.value,\r\n        });\r\n        if (key === 'is_private') {\r\n            this.setState({\r\n                [key]: event.target.checked,\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { testimonyToEdit, testimonies } = this.props;\r\n        const { body, author, is_private, fingerprint } = this.state;\r\n        return (\r\n            <FullPage scrollMode={'normal'}>\r\n                <Slide>\r\n                    <section className=\"active first_section_coffee\">\r\n                        <div className=\"wrapper_full\">\r\n                            <div id=\"social_media\">\r\n                                <div className=\"icons_gatherer\">\r\n                                    <a href=\"https://dribbble.com/boutaleblcoder\" className=\"icon-button dribbble\"><i className=\"fab fa-dribbble\"></i><span></span></a>\r\n                                    <a href=\"https://www.behance.net/boutaleblcoder/\" className=\"icon-button behance\"><i className=\"fab fa-behance\"></i><span></span></a>\r\n                                    <a href=\"https://www.linkedin.com/in/zakariae-bou-taleb-657953122/\" className=\"icon-button linkedin\"><i className=\"fab fa-linkedin-in\"></i><span></span></a>\r\n                                    <a href=\"https://www.instagram.com/boutaleblcoder/\" className=\"icon-button instagram\"><i className=\"fab fa-instagram\"></i><span></span></a>\r\n                                    <a href=\"https://fb.me/boutaleblcoder\" className=\"icon-button facebook\"><i className=\"icon-facebook\"></i><span></span></a>\r\n                                    <a href=\"# \" className=\"icon-button scroll\">\r\n\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card card_buymecoffee\">\r\n                                <div className=\"card-body\">\r\n                                    <h3>Have a <strong>Mint Tea</strong> with me !</h3>\r\n                                    <p className=\"text-muted\">Thank you, feel free to show your support, leave a comment !</p>\r\n                                    <div className=\"mail_form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"input-field col s12\">\r\n                                                <input\r\n                                                    className=\"validate form-group-input author\"\r\n                                                    id=\"author\"\r\n                                                    type=\"text\"\r\n                                                    name=\"author\"\r\n                                                    required=\"required\"\r\n                                                    value={author}\r\n                                                    onChange={(ev) => this.handleChange('author', ev)}\r\n                                                />\r\n                                                <label htmlFor='author' className={author ? 'active' : ''}>username*</label>\r\n                                                <div className=\"form-group-line\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"input-field col s12\">\r\n                                                <textarea\r\n                                                    className=\"validate form-group-input materialize-textarea body\"\r\n                                                    id=\"body\"\r\n                                                    name=\"body\"\r\n                                                    required=\"required\"\r\n                                                    value={body}\r\n                                                    onChange={(ev) => this.handleChange('body', ev)}\r\n                                                />\r\n                                                <label htmlFor='body' className={body ? 'active' : ''}>Baby Don't hurt me ...</label>\r\n                                                <div className=\"form-group-line textarea_line\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"input-field col\">\r\n                                                <p>\r\n                                                    <label>\r\n                                                        <input\r\n                                                            className=\"validate form-group-input is_private\"\r\n                                                            id=\"is_private\"\r\n                                                            type=\"checkbox\"\r\n                                                            name=\"is_private\"\r\n                                                            required=\"required\"\r\n                                                            value={is_private}\r\n                                                            checked={is_private}\r\n                                                            onChange={(ev) => this.handleChange('is_private', ev)}\r\n                                                        />\r\n                                                        <span>Private Message ?</span>\r\n                                                    </label>\r\n                                                </p>\r\n                                                <button\r\n                                                    className=\"pull-right\"\r\n                                                    type=\"submit\"\r\n                                                    name='btn_login'\r\n                                                    onClick={this.handleSubmit}\r\n                                                >\r\n                                                    <span>\r\n                                                        <span>\r\n                                                            <span data-attr-span={testimonyToEdit ? 'Update.' : 'Submit.'}>\r\n                                                                {testimonyToEdit ? 'Update' : 'Submit'}.\r\n                                                            </span>\r\n                                                        </span>\r\n                                                    </span>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card card_coffesbought\">\r\n                                <div className=\"card-body\">\r\n                                    <div id=\"testimonies-modal\" className=\"testimonies-modal\">\r\n                                        <div className=\"modal-inner\">\r\n                                            <div className=\"modal-content\">\r\n                                                {\r\n                                                    _.orderBy(_.filter(testimonies, { 'is_private': false, parent_id: null }), ['upvotes', 'createdAt'], ['desc', 'desc']).map((testimony, index) => {\r\n                                                        return (\r\n                                                            <div className={\"card card_\" + index} data-index={index + 1}>\r\n                                                                <div className=\"shadow_title\">{_.head(_.words(testimony.body))}</div>\r\n                                                                <div className=\"card-body\">\r\n                                                                    <div className=\"top_row\">\r\n                                                                        <h6 className=\"author\">by <b>{testimony.author}</b></h6>\r\n                                                                        <p className=\"text-muted fromNow\">{moment(new Date(testimony.createdAt)).fromNow()}</p>\r\n                                                                        <div className=\"up_down\">\r\n                                                                            <p className=\"text-muted replies\"><b>{_.size(_.filter(testimonies, { 'parent_id': testimony._id }))}</b><i className=\"fas fa-reply-all\"></i></p>\r\n                                                                            <div className={`text-muted upvotes ${_.isUndefined(_.find(_.get(testimony, 'upvotes'), (upvote) => { return upvote.upvoter === fingerprint })) ? '' : 'active'}`}>\r\n                                                                                <b>{_.size(_.get(testimony, 'upvotes'))}</b>\r\n                                                                                <button onClick={(ev) => this.handleSubmitupvotesTestimony(testimony, ev)}>\r\n                                                                                    <i className=\"fas fa-thumbs-up\"></i>\r\n                                                                                </button>\r\n                                                                            </div>\r\n                                                                            <div className={`text-muted downvotes ${_.isUndefined(_.find(_.get(testimony, 'downvotes'), (downvote) => { return downvote.downvoter === fingerprint })) ? '' : 'active'}`}>\r\n                                                                                <b>{_.size(_.get(testimony, 'downvotes'))}</b>\r\n                                                                                <button onClick={(ev) => this.handleSubmitdownvotesTestimony(testimony, ev)}>\r\n                                                                                    <i className=\"fas fa-thumbs-down\"></i>\r\n                                                                                </button>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"middle_row\">\r\n                                                                        <h5>{testimony.body}</h5>\r\n                                                                    </div>\r\n                                                                    <div className=\"bottom_row\">\r\n                                                                        <div className=\"crud\">\r\n                                                                            <i className=\"fas fa-ellipsis-v dropdown-toggle\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"></i>\r\n                                                                            <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                <button onClick={() => this.handleReply(testimony._id)} className=\"dropdown-item\" type=\"button\">Reply</button>\r\n                                                                                {\r\n                                                                                    testimony.fingerprint === fingerprint\r\n                                                                                        ? <><button onClick={() => this.handleEdit(testimony)} className=\"dropdown-item\">Edit</button><div className=\"dropdown-divider\"></div><button onClick={() => this.handleDelete(testimony._id)} className=\"dropdown-item\">Delete</button></>\r\n                                                                                        : ''\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {\r\n                                                                        _.orderBy(_.reject(testimonies, { 'is_private': false, parent_id: null }), ['view'], ['desc']).map((testimony_reply, index_reply) => {\r\n                                                                            if (testimony_reply.parent_id === testimony._id)\r\n                                                                                return (\r\n                                                                                    <div className={\"card card_\" + index_reply} data-index={index_reply + 1}>\r\n                                                                                        <div className=\"shadow_title\">{_.head(_.words(testimony_reply.body))}</div>\r\n                                                                                        <div className=\"card-body\">\r\n                                                                                            <div className=\"top_row\">\r\n                                                                                                <h6 className=\"author\">by <b>{testimony_reply.author}</b></h6>\r\n                                                                                                <p className=\"text-muted fromNow\">{moment(new Date(testimony_reply.createdAt)).fromNow()}</p>\r\n                                                                                                <div className=\"up_down\">\r\n                                                                                                    <div className={`text-muted upvotes ${_.isUndefined(_.find(_.get(testimony_reply, 'upvotes'), (upvote) => { return upvote.upvoter === fingerprint })) ? '' : 'active'}`}>\r\n                                                                                                        <b>{_.size(_.get(testimony_reply, 'upvotes'))}</b>\r\n                                                                                                        <button onClick={(ev) => this.handleSubmitupvotesTestimony(testimony_reply, ev)}>\r\n                                                                                                            <i className=\"fas fa-thumbs-up\"></i>\r\n                                                                                                        </button>\r\n                                                                                                    </div>\r\n                                                                                                    <div className={`text-muted downvotes ${_.isUndefined(_.find(_.get(testimony_reply, 'downvotes'), (downvote) => { return downvote.downvoter === fingerprint })) ? '' : 'active'}`}>\r\n                                                                                                        <b>{_.size(_.get(testimony_reply, 'downvotes'))}</b>\r\n                                                                                                        <button onClick={(ev) => this.handleSubmitdownvotesTestimony(testimony_reply, ev)}>\r\n                                                                                                            <i className=\"fas fa-thumbs-down\"></i>\r\n                                                                                                        </button>\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"middle_row\">\r\n                                                                                                <h5>{testimony_reply.body}</h5>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"bottom_row\">\r\n                                                                                                <div className=\"crud\">\r\n                                                                                                    <i className=\"fas fa-ellipsis-v dropdown-toggle\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"></i>\r\n                                                                                                    <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                        {\r\n                                                                                                            testimony_reply.fingerprint === fingerprint\r\n                                                                                                                ? <><button onClick={() => this.handleEdit(testimony_reply)} className=\"dropdown-item\">Edit</button><div className=\"dropdown-divider\"></div><button onClick={() => this.handleDelete(testimony_reply._id)} className=\"dropdown-item\">Delete</button></>\r\n                                                                                                                : ''\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                )\r\n                                                                            return true;\r\n                                                                        })\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Slide>\r\n                <Slide>\r\n                    <Footer />\r\n                </Slide>\r\n            </FullPage>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    testimonyToEdit: state.home.testimonyToEdit,\r\n    testimonies: state.home.testimonies,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmitNotification: data => dispatch({ type: 'SUBMIT_NOTIFICATION', data }),\r\n\r\n    onSubmitTestimony: data => dispatch({ type: 'SUBMIT_TESTIMONY', data }),\r\n    onEditTestimony: data => dispatch({ type: 'EDIT_TESTIMONY', data }),\r\n    onLoadTestimony: data => dispatch({ type: 'TESTIMONY_PAGE_LOADED', data }),\r\n    onDeleteTestimony: id => dispatch({ type: 'DELETE_TESTIMONY', id }),\r\n    setEditTestimony: testimony => dispatch({ type: 'SET_EDIT_TESTIMONY', testimony }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Minttea) ","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Dashboard\\Dashboard.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\utils\\API.js",["189"],"import axios from \"axios\";\r\nconst headers = {\r\n    \"Content-Type\": \"application/json\"\r\n};\r\nconst burl = \"\";\r\n\r\nexport default {\r\n    login: function(email, password) {\r\n        return axios.post(\r\n            `${burl}/user/login`,\r\n            {\r\n                email,\r\n                password\r\n            },\r\n            {\r\n                headers: headers\r\n            }\r\n        );\r\n    },\r\n    signup: function(send) {\r\n        return axios.post(`${burl}/user/signup`, send, { headers: headers });\r\n    },\r\n    send_mail: function(send) {\r\n        return axios.post(`${burl}/user/send_mail`, send, { headers: headers });\r\n    },\r\n    confirmation: function(send) {\r\n        return axios.post(`${burl}/user/confirmation`, send, { headers: headers });\r\n    },\r\n    update: function(send) {\r\n        return axios.patch(`${burl}/user/update`, send, { headers: headers });\r\n    },\r\n    update_roles: function(send) {\r\n        return axios.patch(`${burl}/user/update_roles`, send, { headers: headers });\r\n    },\r\n    get_user: function(email) {\r\n        return axios.post(\r\n            `${burl}/user/get_user`,\r\n            {\r\n                email\r\n            },\r\n            {\r\n                headers: headers\r\n            }\r\n        );\r\n    },\r\n    get_users: function() {\r\n        return axios.post(\r\n            `${burl}/user/get_users`,\r\n            {\r\n                headers: headers\r\n            }\r\n        );\r\n    },\r\n    isAuth: function() {\r\n        return localStorage.getItem(\"token\") !== null;\r\n    },\r\n    logout: function() {\r\n        localStorage.clear();\r\n    }\r\n};","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Footer\\Footer.js",["190","191","192","193"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport 'whatwg-fetch';\r\nimport API from '../../utils/API';\r\nimport * as $ from \"jquery\";\r\nimport 'bootstrap';\r\nimport 'css-doodle';\r\n\r\nvar _ = require('lodash');\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mail_username : '',\r\n            mail_location: '',\r\n            mail_email: '',\r\n            mail_phone: '',\r\n            mail_content: '',\r\n            window_height: '',\r\n            window_width: '',\r\n        }\r\n        this._handleMouseMove = this._handleMouseMove.bind(this);\r\n        this._handleAlphabet = this._handleAlphabet.bind(this);\r\n        this.send_mail = this.send_mail.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        const { onLoad, onLoadProject } = this.props;\r\n\r\n        axios('/api/articles')\r\n        .then(function (response) {\r\n            onLoad(response.data);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n        axios('/api/projects')\r\n        .then(function (response) {\r\n            onLoadProject(response.data);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        const self = this;\r\n        this._handleMouseMove();\r\n        $(document).ready(function () {\r\n            self._handleAlphabet();\r\n        });\r\n    }\r\n    _handleMouseMove() {\r\n        $('.footer').mousemove(function(e){\r\n            var width = $(this).width() / 2;\r\n            //var height = $(this).height() / 2;\r\n            var amountMovedX = ((width - e.pageX) * 1 / 64);\r\n            //var amountMovedY = ((height - e.pageY) * 1 / 64);\r\n            \r\n            $('.before').css('right', amountMovedX);\r\n            //$('.before').css('top', amountMovedY);\r\n        });\r\n    }\r\n    _handleAlphabet() {\r\n        var win = window,\r\n            doc = document,\r\n            docElem = doc.documentElement,\r\n            body = doc.getElementsByTagName('body')[0],\r\n            x = win.innerWidth || docElem.clientWidth || body.clientWidth,\r\n            y = win.innerHeight|| docElem.clientHeight|| body.clientHeight;\r\n        var gridWidth;\r\n        var gridHeight;\r\n        var letterWidth = _.round(docElem.clientWidth / _.round(docElem.clientWidth / 30)); // @todo: make this dynamic\r\n        var letterHeight = _.round(docElem.clientWidth / _.round(docElem.clientWidth / 30)); // @todo: make this dynamic\r\n        var totalLetters;\r\n        var letterArray = [];\r\n        var currentLetters = 0;\r\n        var resizeCount = 0;\r\n        \r\n        // the unicode values that we want to loop through (A-Z)\r\n        // http://www.codingforums.com/showpost.php?s=ca38992f8716f43d325c12be6fc0198b&p=843844&postcount=3\r\n        \r\n        var charCodeRange = {\r\n            start: 48,\r\n            end: 49\r\n        };\r\n        \r\n        // get the grid's width and height\r\n        \r\n        function getDimensions(){\r\n            gridWidth = docElem.clientWidth;\r\n            gridHeight = docElem.clientHeight;\r\n        }\r\n        \r\n        // get the total possible letters needed to fill the grid\r\n        // and store that in totalLetters\r\n        \r\n        function getTotalLetters(){\r\n            var multiplierX = Math.round(gridWidth / letterWidth);\r\n            var multiplierY = Math.round(gridHeight / letterHeight); \r\n            totalLetters = Math.round(multiplierX * multiplierY);\r\n            //console.log('multiplierX: '+multiplierX, '\\nmultiplierY: '+multiplierY, '\\ntotalLetters: '+totalLetters);\r\n        }\r\n        \r\n        // loop through the unicode values and push each character into letterArray\r\n        \r\n        function populateLetters() {\r\n            for (var i = charCodeRange.start; i <= charCodeRange.end; i++) {\r\n                letterArray.push(String.fromCharCode(i));\r\n            }\r\n        }\r\n        \r\n        // a function to loop a given number of times (value), each time\r\n        // appending a letter from the letter array to the grid\r\n        \r\n        function drawLetters(value){\r\n            var text;\r\n            var span;\r\n            var count = 0;\r\n        \r\n            for (var letter=0; letter <= value; letter++) {\r\n                text = document.createTextNode(letterArray[count]);\r\n                span = document.createElement('span');\r\n                span.appendChild(text);\r\n                $('.letter-grid').append(span);\r\n                count++;\r\n            \r\n                // if our count equals the length of our letter array, then that\r\n                // means we've reached the end of the array (Z), so we set count to \r\n                // zero again in order to start from the beginning of the array (A).\r\n                // we keep looping over the letter array 'value' number of times.\r\n            \r\n                if (count === letterArray.length) {\r\n                    count = 0;\r\n                }\r\n            \r\n                // if our for counter var (letter) equals the passed in value argument\r\n                // then we've finished our loop and we throw a class onto the grid element\r\n                \r\n                if (letter === value) {\r\n                    $('.letter-grid').addClass('js-show-letters');\r\n                }\r\n            }\r\n        }\r\n        \r\n        // get the length of the grid.find('span') jQuery object\r\n        // essentially the current number of letters in the grid at this point\r\n        \r\n        function getCurrentLetters(){\r\n            currentLetters = $('.letter-grid').find('span').length;\r\n        }\r\n        \r\n        function init() {\r\n            populateLetters();\r\n            getDimensions();\r\n            getTotalLetters();\r\n            drawLetters(totalLetters);\r\n            getCurrentLetters();\r\n        }\r\n        \r\n        function onResize() {\r\n            resizeCount++;\r\n            getDimensions();\r\n            getTotalLetters();\r\n            if (currentLetters < totalLetters) {\r\n                var difference = totalLetters - currentLetters;\r\n                drawLetters(difference);\r\n            }            \r\n            getCurrentLetters();\r\n        }\r\n        \r\n        init();\r\n        \r\n        window.addEventListener('resize', _.debounce(onResize, 100));\r\n    }\r\n    async send_mail() {\r\n        const { mail_username, mail_location, mail_email, mail_phone, mail_content } = this.state;\r\n        if (!mail_username || mail_username.length === 0) return;\r\n        if (!mail_email || mail_email.length === 0) return;\r\n        if (!mail_content || mail_content.length === 0) return;\r\n        try {\r\n            const { data } = await API.send_mail({ mail_username, mail_location, mail_email, mail_phone, mail_content });\r\n            $('#mailSentModal').modal('toggle');\r\n            $('#mailSentModal .modal-close').click(() => {\r\n                this.setState({\r\n                    mail_username : '',\r\n                    mail_location: '',\r\n                    mail_email: '',\r\n                    mail_phone: '',\r\n                    mail_content: '',\r\n                });\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { articles, projects } = this.props;\r\n        return (\r\n            <div className=\"footer\" id=\"footer_to\">\r\n                <div className=\"modal fade\" id=\"mailSentModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"mailSentModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-body\">\r\n                                <a href=\"# \" title=\"Close\" className=\"modal-close\" data-dismiss=\"modal\">Close</a>\r\n                                <h5 className=\"modal-title\" id=\"mailSentModalLabel\">Voilà!</h5>\r\n                                <div>Your mail was sent, we thank you for trusting us, we'll reach out to you before you even know it.</div>\r\n                                <div>How about you joins us, not only you can give a feedback to the post you're reading, but you can discover much more about out community.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"letter-grid\"></div>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"top_shelf\">\r\n                        <div className=\"first_box\">\r\n                            <h6>Latest.</h6>\r\n                            <ul>\r\n                                {\r\n                                    (_.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['createdAt'], ['desc']).slice(0, 3)).map((article, index) => {\r\n                                        return (\r\n                                            <li key={index}>\r\n                                                <Link to={`/blog/${article._id}`}>\r\n                                                    <span>{article.title}</span>\r\n                                                    <p className=\"text-muted author\">by <b>{article.author}</b>, {moment(new Date(article.createdAt)).fromNow()}</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"second_box\">\r\n                            <h6>Most viewed.</h6>\r\n                            <ul>\r\n                                {\r\n                                    (_.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['view'], ['desc']).slice(0, 3)).map((article, index) => {\r\n                                        return (\r\n                                            <li key={index}>\r\n                                                <Link to={`/blog/${article._id}`}>\r\n                                                    <span>{article.title}</span>\r\n                                                    <p className=\"text-muted author\">by <b>{article.author}</b>, {moment(new Date(article.createdAt)).fromNow()}</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"third_box\">\r\n                            <h6>Most commented.</h6>\r\n                            <ul>\r\n                                {\r\n                                    (_.orderBy(_.filter(articles, (_a) => { return !_a._hide }), ['comment'], ['desc']).slice(0, 3)).map((article, index) => {\r\n                                        return (\r\n                                            <li key={index}>\r\n                                                <Link to={`/blog/${article._id}`}>\r\n                                                    <span>{article.title}</span>\r\n                                                    <p className=\"text-muted author\">by <b>{article.author}</b>, {moment(new Date(article.createdAt)).fromNow()}</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"fourth_box\">\r\n                            <h6>Latest Projects.</h6>\r\n                            <ul>\r\n                                {\r\n                                    (_.orderBy(_.filter(projects, (_p) => { return !_p._hide }), ['createdAt'], ['asc']).slice(0, 3)).map((project, index) => {\r\n                                        return (\r\n                                            <li key={index}>\r\n                                                <a href={project.link_to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                    <span>{project.title}</span>\r\n                                                    <p className=\"text-muted author\">by <b>{project.author}</b>, {moment(new Date(project.createdAt)).fromNow()}</p>\r\n                                                </a>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mail-modal\">\r\n                        <div className=\"before\"></div>\r\n                        <div className=\"modal-inner\">\r\n                            <div className=\"modal-left\">\r\n                                <div>\r\n                                    <h5>Other ways to get in touch</h5>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"fas fa-map-marker-alt\"></i>\r\n                                    <span>Meknès, Maroc</span>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"fas fa-phone\"></i>\r\n                                    <span>(+212) 6 54 52 84 92</span>\r\n                                </div>\r\n                                <div>\r\n                                    <i className=\"fas fa-envelope\"></i>\r\n                                    <span>contact@boutaleb.dev</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-content\">\r\n                                <form className=\"mail_form\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s6\">\r\n                                            <input \r\n                                                className=\"validate form-group-input mail_username\" \r\n                                                id=\"mail_username\" \r\n                                                type=\"text\" \r\n                                                name=\"mail_username\" \r\n                                                required=\"required\"\r\n                                                value={this.state.mail_username} \r\n                                            onChange={this.handleChange}\r\n                                            />\r\n                                            <label htmlFor='mail_username'>username*</label>\r\n                                            <div className=\"form-group-line\"></div>\r\n                                        </div>\r\n                                        <div className=\"input-field col s6\">\r\n                                            <input \r\n                                                className=\"validate form-group-input mail_location\" \r\n                                                id=\"mail_location\" \r\n                                                type=\"text\" \r\n                                                name=\"mail_location\"\r\n                                                value={this.state.mail_location} \r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <label htmlFor='mail_location'>address</label>\r\n                                            <div className=\"form-group-line\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s6\">\r\n                                            <input \r\n                                                className=\"validate form-group-input mail_email\" \r\n                                                id=\"mail_email\" \r\n                                                type=\"text\" \r\n                                                name=\"mail_email\" \r\n                                                required=\"required\"\r\n                                                value={this.state.mail_email} \r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <label htmlFor='mail_email'>email*</label>\r\n                                            <div className=\"form-group-line\"></div>\r\n                                        </div>\r\n                                        <div className=\"input-field col s6\">\r\n                                            <input \r\n                                                className=\"validate form-group-input mail_phone\" \r\n                                                id=\"mail_phone\" \r\n                                                type=\"text\" \r\n                                                name=\"mail_phone\" \r\n                                                value={this.state.mail_phone} \r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <label htmlFor='mail_phone'>phone</label>\r\n                                            <div className=\"form-group-line\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <textarea \r\n                                                className=\"validate form-group-input materialize-textarea mail_content\" \r\n                                                id=\"mail_content\" \r\n                                                name=\"mail_content\" \r\n                                                required=\"required\"\r\n                                                value={this.state.mail_content} \r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            <label htmlFor='mail_content'>what can i do for you ?</label>\r\n                                            <div className=\"form-group-line textarea_line\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <button \r\n                                                className=\"pull-right\" \r\n                                                type=\"submit\"\r\n                                                name='btn_login' \r\n                                                onClick={this.send_mail}\r\n                                            >\r\n                                                <span>\r\n                                                    <span>\r\n                                                        <span data-attr-span=\"Submit.\">\r\n                                                            Submit.\r\n                                                        </span>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"low_shelf\">\r\n                        <span className=\"push-left\">\r\n                            <ul className=\"list-inline\">\r\n                                <li className=\"list-inline-item\">\r\n                                    <a href=\"https://www.instagram.com/boutaleblcoder/\">Instagram</a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a href=\"https://fb.me/boutaleblcoder\">Facebook</a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a href=\"https://www.behance.net/boutaleblcoder/\">Behance</a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <i className=\"far fa-copyright\"></i>\r\n                                    <span>{moment().format('YYYY')}</span> - With <i className=\"fas fa-heart\"></i> from Zakariae boutaleb.\r\n                                </li>\r\n                            </ul>\r\n                        </span>\r\n                        <span className=\"push-right\">\r\n                            <ul className=\"list-inline\">\r\n                                <li className=\"list-inline-item\">\r\n                                    <a href=\"# \">Legal Notice</a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <a href=\"# \">Newsroom</a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                    <span className=\"name\">Zakariae.</span>\r\n                                </li>\r\n                            </ul>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    articles: state.home.articles,\r\n    projects: state.home.projects,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onLoad: data => dispatch({ type: 'HOME_PAGE_LOADED', data }),\r\n    onLoadProject: data => dispatch({ type: 'PROJECT_PAGE_LOADED', data }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Header\\Header.js",["194","195","196","197"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { loadProgressBar } from 'axios-progress-bar';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport logo from '../../logo.svg';\r\nimport favicon from '../../favicon.svg';\r\nimport * as $ from \"jquery\";\r\nimport 'bootstrap';\r\nimport 'axios-progress-bar/dist/nprogress.css';\r\n\r\nconst _ = require('lodash');\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logo_to_show: logo,\r\n            _search_value: '',\r\n            currentPage: 1,\r\n            todosPerPage: 4,\r\n            currentCard: 0,\r\n        };\r\n        this._handleClickEvents = this._handleClickEvents.bind(this);\r\n        this._handleClickPage = this._handleClickPage.bind(this);\r\n        this.handleJSONTOHTMLIMAGE = this.handleJSONTOHTMLIMAGE.bind(this);\r\n        this._FormatNumberLength = this._FormatNumberLength.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        const { onLoad, onLoadProject } = this.props;\r\n        axios('/api/articles')\r\n            .then(function (response) {\r\n                onLoad(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        axios('/api/projects')\r\n            .then(function (response) {\r\n                onLoadProject(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        loadProgressBar();\r\n\r\n        this._handleClickEvents();\r\n        this.handleSearch();\r\n\r\n        const self = this;\r\n\r\n        let _url = window.location.pathname;\r\n        if (_url === \"/login\" || _url === \"/signup\")\r\n            $('.fixedHeaderContainer').hide();\r\n\r\n        if (_url === \"/dashboard\")\r\n            $('.fixedHeaderContainer').addClass('dashboard_header');\r\n\r\n        function displayWindowSize() {\r\n            if ($(window).width() <= 425) {\r\n                self.setState({\r\n                    logo_to_show: favicon\r\n                });\r\n                $('.logoHolder').addClass('small');\r\n            } else {\r\n                self.setState({\r\n                    logo_to_show: logo\r\n                });\r\n                $('.logoHolder').removeClass('small');\r\n            }\r\n        }\r\n        window.addEventListener(\"resize\", displayWindowSize);\r\n        displayWindowSize();\r\n\r\n\r\n        if ($(window).scrollTop() > 100 || _url === '/contact') {\r\n            $('.fixedHeaderContainer').css(\"background-color\", \"rgba(255, 255, 255, 0.75)\");\r\n        } else {\r\n            $('.fixedHeaderContainer').css(\"background-color\", \"rgba(255, 255, 255, 0)\");\r\n        }\r\n        \r\n        $(window).scroll(function () {\r\n            if ($(window).scrollTop() > 100 || _url === '/contact') {\r\n                $('.fixedHeaderContainer').css(\"background-color\", \"rgba(255, 255, 255, 0.75)\");\r\n            } else {\r\n                $('.fixedHeaderContainer').css(\"background-color\", \"rgba(255, 255, 255, 0)\");\r\n            }\r\n        });\r\n    }\r\n    _handleClickEvents() {\r\n        let searchWrapper = document.querySelector('.search-wrapper'),\r\n            searchInput = document.querySelector('.search-input'),\r\n            searchIcon = document.querySelector('.search'),\r\n            $searchModal = $('#search-modal'),\r\n            searchActivated = false,\r\n            self = this;\r\n\r\n        $('.search_form').click((event) => {\r\n            if (!searchActivated) {\r\n                searchWrapper.classList.add('focused');\r\n                searchIcon.classList.add('active');\r\n                searchInput.focus();\r\n                searchActivated = !searchActivated;\r\n                $('.overlay_menu').toggleClass('overlay_menu--is-closed');\r\n            } else {\r\n                if ($(event.target).hasClass('search')) {\r\n                    searchWrapper.classList.remove('focused');\r\n                    searchIcon.classList.remove('active');\r\n                    searchActivated = !searchActivated;\r\n                    $('.overlay_menu').toggleClass('overlay_menu--is-closed');\r\n                    $searchModal.removeClass('active');\r\n                    self.setState({\r\n                        _search_value: ''\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        /* menu */\r\n        $('.navToggle').click(function (event) {\r\n            $('.navToggle').toggleClass('active');\r\n            $('.menu').toggleClass('menu--is-closed');\r\n            $('.overlay_menu').toggleClass('overlay_menu--is-closed');\r\n\r\n            searchWrapper.classList.remove('focused');\r\n            searchIcon.classList.remove('active');\r\n            searchActivated = !searchActivated;\r\n\r\n            if ($(\".login\").css('display') != 'none') {\r\n                $(\".login\").toggle(400);\r\n            }\r\n\r\n            let _profil_dropdown = document.querySelector(\".accountProfilHolder\");\r\n            if (_profil_dropdown && _profil_dropdown.classList.contains(\"open\")) {\r\n                _profil_dropdown.classList.remove(\"open\");\r\n            }\r\n        });\r\n\r\n        /* menu active */\r\n        $('.nav-link').click(function () {\r\n            $('.navToggle').toggleClass('active');\r\n            $('.menu').toggleClass('menu--is-closed');\r\n            $('.overlay_menu').toggleClass('overlay_menu--is-closed');\r\n            $(this).addClass('active');\r\n            $('.nav-link').not(this).removeClass('active');\r\n\r\n            searchWrapper.classList.remove('focused');\r\n            searchIcon.classList.remove('active');\r\n            searchActivated = !searchActivated;\r\n        });\r\n\r\n        $('._profil_link').click(() => {\r\n            let _profil_dropdown = document.querySelector(\".accountProfilHolder\");\r\n            if (_profil_dropdown && _profil_dropdown.classList.contains(\"open\")) {\r\n                _profil_dropdown.classList.remove(\"open\");\r\n            }\r\n\r\n            if (!$('.menu').hasClass('menu--is-closed')) {\r\n                $('.menu').toggleClass('menu--is-closed');\r\n                $('.navToggle').toggleClass('active');\r\n            }\r\n\r\n            searchWrapper.classList.remove('focused');\r\n            searchIcon.classList.remove('active');\r\n            searchActivated = !searchActivated;\r\n        });\r\n\r\n        /* outside the login or menu */\r\n        $('.overlay_menu').click(function () {\r\n            $('.overlay_menu').toggleClass('overlay_menu--is-closed');\r\n\r\n            if ($(\".login\").css('display') != 'none') {\r\n                $(\".login\").toggle(400);\r\n            }\r\n\r\n            let _profil_dropdown = document.querySelector(\".accountProfilHolder\");\r\n            if (_profil_dropdown && _profil_dropdown.classList.contains(\"open\")) {\r\n                _profil_dropdown.classList.remove(\"open\");\r\n            }\r\n\r\n            if (!$('.menu').hasClass('menu--is-closed')) {\r\n                $('.menu').toggleClass('menu--is-closed');\r\n                $('.navToggle').toggleClass('active');\r\n            }\r\n\r\n            searchWrapper.classList.remove('focused');\r\n            searchIcon.classList.remove('active');\r\n            searchActivated = !searchActivated;\r\n        });\r\n\r\n        document.querySelectorAll(\".js-fr\").forEach(trigger => {\r\n            // pull trigger\r\n            trigger.onclick = () => {\r\n                // langTrigger\r\n                trigger.parentNode.querySelectorAll(\".js-fr\").forEach(el => {\r\n                    el.classList.add(\"is-active\");\r\n                });\r\n                trigger.parentNode.querySelectorAll(\".js-en\").forEach(el => {\r\n                    el.classList.remove(\"is-active\");\r\n                });\r\n            };\r\n        });\r\n        document.querySelectorAll(\".js-en\").forEach(trigger => {\r\n            // pull trigger\r\n            trigger.onclick = () => {\r\n                // langTorigger\r\n                trigger.parentNode.querySelectorAll(\".js-fr\").forEach(el => {\r\n                    el.classList.remove(\"is-active\");\r\n                });\r\n                trigger.parentNode.querySelectorAll(\".js-en\").forEach(el => {\r\n                    el.classList.add(\"is-active\");\r\n                });\r\n            };\r\n        });\r\n    }\r\n    _handleClickPage(event) {\r\n        this.setState({\r\n            currentPage: Number(event.target.id)\r\n        });\r\n    }\r\n    handleJSONTOHTMLIMAGE(inputDelta, index) {\r\n        function runAfterElementExists(jquery_selector, callback) {\r\n            var checker = window.setInterval(function () {\r\n                if (jquery_selector) {\r\n                    clearInterval(checker);\r\n                    callback();\r\n                }\r\n            }, 200);\r\n        }\r\n        runAfterElementExists(inputDelta, function () {\r\n            const html = $.parseHTML(inputDelta);\r\n            $('.card_' + index + ' figure').html($(html).find('img').first());\r\n        });\r\n    }\r\n    _FormatNumberLength(num, length) {\r\n        var r = \"\" + num;\r\n        while (r.length < length) {\r\n            r = \"0\" + r;\r\n        }\r\n        return r;\r\n    }\r\n    handleSearch() {\r\n        $('.search-input').on('focusin', function () {\r\n            $('#search-modal').addClass('active');\r\n        });\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { logo_to_show, _search_value, currentPage, todosPerPage } = this.state;\r\n        const { articles, projects } = this.props;\r\n        return (\r\n            <>\r\n                <div className=\"overlay_menu overlay_menu--is-closed\"></div>\r\n                {/* the actual header */}\r\n                <div className=\"fixedHeaderContainer\">\r\n                    <div className=\"headerWrapper wrapper\">\r\n                        <header>\r\n                            <span className=\"navToggle menu-toggle\">\r\n                                <svg className=\"hamburger\" width=\"300\" height=\"300\" version=\"1.1\" id=\"Layer_1\" viewBox=\"-50 -50 100 100\" preserveAspectRatio=\"none\">\r\n                                    <g strokeWidth=\"2\" strokeLinecap=\"round\" strokeMiterlimit=\"10\">\r\n                                        <line className=\"one\" x1=\"0\" y1=\"20\" x2=\"50\" y2=\"20\"></line>\r\n                                        <line className=\"three\" x1=\"0\" y1=\"30\" x2=\"50\" y2=\"30\"></line>\r\n                                    </g>\r\n                                </svg>\r\n                            </span>\r\n                            <a className=\"logoHolder\" href=\"/\">\r\n                                <img className=\"logo img-fluid\" src={logo_to_show} alt=\"Risala\" />\r\n                            </a>\r\n                            <form className=\"search_form\">\r\n                                <div className=\"input-field search-wrapper\">\r\n                                    <input\r\n                                        className=\"search-input validate form-group-input _search_value\"\r\n                                        id=\"_search_value\"\r\n                                        type=\"text\"\r\n                                        name=\"_search_value\"\r\n                                        value={_search_value}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                    <label htmlFor='_search_value' className={_search_value ? 'active' : ''}>Search.</label>\r\n                                    <div className=\"form-group-line\"></div>\r\n\r\n                                    <span className=\"hover_effect\"></span>\r\n                                    <div className='search'></div>\r\n                                </div>\r\n                            </form>\r\n                        </header>\r\n                    </div>\r\n                </div>\r\n                {/* the actual header */}\r\n                <div id=\"search-modal\">\r\n                    <div className=\"search-modal-background\"></div>\r\n                    <div className=\"search-content-area\">\r\n                        <div className=\"search-results\">\r\n                            <ul id=\"page\">\r\n                                {\r\n                                    _.slice(_.filter(_.filter(_.union(articles, projects), (_a) => { return !_a._hide && _search_value != '' }), (_ap) => {\r\n                                        return _.split(_.lowerCase(_search_value), ' ').some(_s_v => _.lowerCase(_ap.title).includes(_s_v)) || _.split(_.lowerCase(_search_value), ' ').some(_s_v => _.lowerCase(_ap.author).includes(_s_v)) || _ap.tag.some(x => _.split(_.lowerCase(_search_value), ' ').some(_s_v => _.lowerCase(x).includes(_s_v)));\r\n                                    }), ((currentPage * todosPerPage) - todosPerPage), (currentPage * todosPerPage)).map((ap, index) => {\r\n                                        return (\r\n                                            <li className=\"article_card article_anchor\" data-name={moment(ap.createdAt).format(\"YYYY Do MM\")} id=\"article_card\" key={index}>\r\n                                                <div className={\"col card card_\" + index} data-title={_.snakeCase(ap.title)} data-index={_.add(index, 1)}>\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className=\"text\">\r\n                                                            <p className=\"text-muted author\">by <b>{ap.author}</b>, {moment(new Date(ap.createdAt)).fromNow()}</p>\r\n                                                            <figure>{this.handleJSONTOHTMLIMAGE(ap.body, index)}</figure>\r\n                                                            <h4>{ap.title}</h4>\r\n                                                            <a href={ap.categorie ? `blog/${ap._id}` : ap.link_to} target={!ap.categorie ? \"_blank\" : ''}>\r\n                                                                <div className=\"readmore\">\r\n                                                                    <button data-am-linearrow=\"tooltip tooltip-bottom\" display-name=\"Read More\">\r\n                                                                        <div className=\"line line-1\"></div>\r\n                                                                        <div className=\"line line-2\"></div>\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </a>\r\n                                                            <div className=\"comments_up_down\">\r\n                                                                <p className=\"text-muted views\"><b>{_.size(ap.view)}</b><i className=\"fas fa-eye\"></i></p>\r\n                                                                <p className=\"text-muted comments\"><b>{_.size(ap.comment)}</b> <i className=\"fas fa-comment-alt\"></i></p>\r\n                                                                <p className=\"text-muted upvotes\"><b>{_.size(ap.upvotes)}</b> <i className=\"fas fa-thumbs-up\"></i></p>\r\n                                                                <p className=\"text-muted downvotes\"><b>{_.size(ap.downvotes)}</b> <i className=\"fas fa-thumbs-down\"></i></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                            <ul id=\"page-numbers\">\r\n                                {\r\n                                    ([...Array(Math.ceil(_.filter(_.filter(articles, (_a) => { return !_a._hide && _search_value != '' }), (_ap) => {\r\n                                        return _.includes(_ap.title, _search_value) || _.includes(_ap.author, _search_value) || _.includes(_ap.categorie, _search_value) || _ap.tag.some(x => x.includes(_search_value));\r\n                                    }).length / todosPerPage)).keys()]).map(number => {\r\n                                        return (\r\n                                            <li\r\n                                                key={number + 1}\r\n                                                id={number + 1}\r\n                                                onClick={this._handleClickPage}\r\n                                                className={currentPage === number + 1 ? 'current' : ''}\r\n                                            >\r\n                                                <p className=\"shadow_page\">.{this._FormatNumberLength(number + 1, 2)}</p>\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"search-suggestions\">\r\n                            <div><small>Here</small></div>\r\n                            <div className=\"togglebtn\"><span role=\"img\" aria-label=\"sheep\">👉</span> May we suggest?</div>\r\n                            <ul className=\"text-muted tags\">\r\n                                {\r\n                                    _.orderBy(_.filter(_.union(articles, projects), (_a) => { return !_a._hide }), ['comment', 'upvotes', 'view'], ['desc', 'desc', 'desc']).map((_ap, _index) => {\r\n                                        return (\r\n                                            _ap.tag.map((t, i) => {\r\n                                                return (\r\n                                                    <li key={_index + '_' + i} className=\"tag_item\" onClick={() => { this.setState({ _search_value: t }); }}>{t}</li>\r\n                                                )\r\n                                            })\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"menu menu--is-closed\">\r\n                    <li><span className=\"item item-0\"></span></li>\r\n                    <li><span className=\"item item-1\"><Link to='/' activeClassName='active' className=\"nav-link\" id=\"_home_link\"> Home. </Link></span></li>\r\n                    <li><span className=\"item item-2\"><Link to='/blog' activeClassName='active' className=\"nav-link\" id=\"_blog_link\"> Blog. </Link></span></li>\r\n                    <li><span className=\"item item-4\"><Link to='/minttea' activeClassName='active' className=\"nav-link\" id=\"_minttea_link\"> Mint Tea. </Link></span></li>\r\n                    <li><span className=\"item item-3\"><Link to='/about' activeClassName='active' className=\"nav-link\" id=\"_about_link\"> About Me. </Link></span></li>\r\n                    <li><span className=\"item item-5\"><Link to='/contact' activeClassName='active' className=\"nav-link\" id=\"_contact_link\"> Contact Me. </Link></span></li>\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    articles: state.home.articles,\r\n    projects: state.home.projects,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onLoad: data => dispatch({ type: 'HOME_PAGE_LOADED', data }),\r\n    onLoadProject: data => dispatch({ type: 'PROJECT_PAGE_LOADED', data }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Dashboard\\Calendar.js",["198","199"],"import React from \"react\";\r\nimport moment from 'moment';\r\n\r\nvar _ = require('lodash');\r\n\r\nclass Calendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: new Date(),\r\n            selectedDate: new Date()\r\n        };\r\n        this.renderHeader = this.renderHeader.bind(this);\r\n        this.renderDays = this.renderDays.bind(this);\r\n        this.renderCells = this.renderCells.bind(this);\r\n        this.onDateClick = this.onDateClick.bind(this);\r\n        this.nextMonth = this.nextMonth.bind(this);\r\n        this.prevMonth = this.prevMonth.bind(this);\r\n    }\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"header row flex-middle\">\r\n                <div className=\"col col-start\">\r\n                    <span className='p'>\r\n                        { moment(this.state.currentMonth).format('MMMM, YYYY') }\r\n                    </span>\r\n                </div>\r\n                <div className=\"col col-center\" onClick={this.prevMonth}>\r\n                    <div className=\"icon\"><i className=\"fas fa-long-arrow-alt-left\"></i></div>\r\n                </div>\r\n                <div className=\"col col-end\" onClick={this.nextMonth}>\r\n                    <div className=\"icon\"><i className=\"fas fa-long-arrow-alt-right\"></i></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    renderDays() {\r\n        const days = [];\r\n        let startDate = moment(this.state.currentMonth).startOf('week');\r\n        \r\n        for (let i = 0; i < 7; i++) {\r\n            days.push(\r\n                <div className=\"col col-center\" key={i}>\r\n                    { moment(moment(startDate).add(i, 'days')).format('dd') }\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div className=\"days row\">{days}</div>;\r\n    }\r\n    renderCells() {\r\n        const { currentMonth, selectedDate } = this.state;\r\n        const monthStart = moment(currentMonth).startOf('M');\r\n        const monthEnd = moment(monthStart).endOf('M');\r\n        const startDate = moment(monthStart).startOf('week');\r\n        const endDate = moment(monthEnd).endOf('week');\r\n        \r\n        const rows = [];\r\n\r\n        let days = [];\r\n        let day = startDate;\r\n        let formattedDate = \"\";\r\n        let names = [];\r\n        let _event_dates = [];\r\n        \r\n        while (day <= endDate) {\r\n            for (let i = 0; i < 7; i++) {\r\n                formattedDate = moment(day).format('D');\r\n                const cloneDay = day;\r\n                names = _.map(_.filter(this.props.NOTIFICATIONS, (item) => { return _.isEqual(moment(item.createdAt).format('MMM Do'), moment(day).format('MMM Do')) }), (notification) => { return '['+notification.type+']'; });\r\n                \r\n                days.push(\r\n                    <div\r\n                    className={`col cell ${\r\n                        ! moment(day).isSame(monthStart, 'month')\r\n                        ? \"disabled\"\r\n                        : moment(day).isSame(selectedDate, 'day')\r\n                        ? \"selected\"\r\n                        : _.includes(_.map(_.map(this.props.NOTIFICATIONS, 'createdAt'), (item) => { return moment(item).format('MMM Do') }), moment(day).format('MMM Do'))\r\n                        ? \"notification \"+names\r\n                        : \"\"\r\n                    }`}\r\n                    key={day}\r\n                    onClick={() => this.onDateClick( moment(cloneDay) )}\r\n                    >\r\n                        <span className=\"number\">{formattedDate}</span>\r\n                        <span className=\"bg\">{formattedDate}</span>\r\n                    </div>\r\n                );\r\n                day = moment(day).add(1, 'days');\r\n            }\r\n            rows.push(\r\n                <div className=\"row\" key={day}>\r\n                    {days}\r\n                </div>\r\n            );\r\n            days = [];\r\n        }\r\n\r\n        return <div className=\"body\">{rows}</div>;\r\n    }\r\n    onDateClick(day) {\r\n        this.setState({\r\n            selectedDate: day\r\n        });\r\n    }\r\n    nextMonth() {\r\n        this.setState({\r\n            currentMonth: moment(this.state.currentMonth).add(1, 'M').format('MMMM, YYYY')\r\n        });\r\n    }\r\n    prevMonth() {\r\n        this.setState({\r\n            currentMonth: moment(this.state.currentMonth).subtract(1, 'M').format('MMMM, YYYY')\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"calendar\">\r\n                {this.renderHeader()}\r\n                {this.renderDays()}\r\n                {this.renderCells()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar;","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Dashboard\\Account.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport 'whatwg-fetch';\r\nimport API from '../../utils/API';\r\nimport $ from 'jquery';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst socketURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.hostname\r\n    : 'localhost:8800';\r\n    \r\nconst socket = socketIOClient(socketURL, {'transports': ['websocket', 'polling']});\r\nvar _ = require('lodash');\r\n\r\nclass Account extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            _user: {\r\n                username: '',\r\n                email: '',\r\n            },\r\n            _old_username: '',\r\n            _old_email: '',\r\n            _current_password: '',\r\n            _new_password: '',\r\n            _confirm_password: '',\r\n            modal_msg: '',\r\n        };\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.set_articles_author = this.set_articles_author.bind(this);\r\n\t\tthis.handleEditArticle = this.handleEditArticle.bind(this);\r\n        this.get_user = this.get_user.bind(this);\r\n        this.send_user = this.send_user.bind(this);\r\n        this._progress = this._progress.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        this.get_user();\r\n    }\r\n    set_articles_author(_old_username, _new_username) {\r\n        const self = this;\r\n\r\n        axios('/api/articles')\r\n        .then(function (response) {\r\n            _.map(response.data.articles, (article) => {\r\n                if(article.author == _old_username) {\r\n                    function setEditFunction() {\r\n                        return new Promise((resolve, reject) => {\r\n                            setTimeout(function() {\r\n                                self.handleEditArticle(article);\r\n                                true ? resolve('Success') : reject('Error');\r\n                            }, 2000);\r\n                        })\r\n                    }\r\n                    setEditFunction()\r\n                        .then(() => {\r\n                            self.handleSubmit(_new_username);\r\n                        });\r\n                }\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n    handleEditArticle(article) {\r\n        const { setEdit } = this.props;\r\n        setEdit(article);\r\n    }\r\n    handleSubmit(_new_username){\r\n        const { onSubmitNotification, articleToEdit, onEdit } = this.props;\r\n        const { title, body, author, categorie, _hide, tag, comment, upvotes, downvotes, view } = this.state;\r\n        \r\n        const self = this;\r\n        \r\n        return axios.patch(`/api/articles/${articleToEdit._id}`, {\r\n            author: _new_username,\r\n        })\r\n            .then((res) => {\r\n                onEdit(res.data);\r\n                return axios.post('/api/notifications', {\r\n                    type: 'Article Edited',\r\n                    description: '\\''+author+'\\' edited \\''+title+'\\'',\r\n                    author: author\r\n                })\r\n                .then((res_n) => onSubmitNotification(res_n.data))\r\n                .catch(error => {\r\n                    console.log(error)\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\tasync get_user() {\r\n        const self = this;\r\n        try {\r\n            const { data } = await API.get_user(localStorage.getItem('email'));\r\n\t\t\tself.setState({\r\n                _user: data.user,\r\n                _old_username: data.user.username,\r\n                _old_email: data.user.email,\r\n                _current_password: '',\r\n                _new_password: '',\r\n                _confirm_password: '',\r\n\t\t\t});\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    async send_user() {\r\n        let self = this;\r\n        const { _user, _old_username, _old_email, _current_password, _new_password, _confirm_password } = this.state;\r\n        const { onSubmitNotification } = this.props;\r\n        \r\n        try {\r\n            if (_new_password){\r\n                if(!_current_password || !_confirm_password) throw { text: 'Please fill out your old password and confirm it, if you have forgotten your password, please do contact the admin'};\r\n                if(_new_password != _confirm_password) throw { text: 'Please check your password confirmation'};\r\n            }\r\n            await API.update({ _user, _old_username, _old_email, _current_password, _new_password })\r\n            .then((res) => {\r\n                self.setState({\r\n                    modal_msg: res.data.text\r\n                }, () => {\r\n                    self.set_articles_author(_old_username, _user.username);\r\n                    self.get_user();\r\n                    $('#edit_modal').modal('toggle');\r\n                    socket.on(\"USER_UPDATED_GET\", data => self.get_user());\r\n                    socket.emit(\"USER_UPDATED\", res.data.text);\r\n                    return axios.post('/api/notifications', {\r\n                        type: 'User Account Updated',\r\n                        description: '\\''+_old_username+'\\' edited account',\r\n                        author: _user.username\r\n                    })\r\n                    .then((res_n) => onSubmitNotification(res_n.data))\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    });\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                self.setState({\r\n\t\t\t\t\tmodal_msg: error.response.data.text\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\t$('#edit_modal_error').modal('toggle');\r\n\t\t\t\t});\r\n            });\r\n        } catch (error) {\r\n            self.setState({\r\n\t\t\t\tmodal_msg: JSON.stringify(error)\r\n\t\t\t}, () => {\r\n\t\t\t\t$('#edit_modal_error').modal('toggle');\r\n\t\t\t});\r\n        }\r\n    }\r\n    handleChangeField(key, event) {\r\n        const self = this;\r\n        const value = event.target.value;\r\n        if(key === 'username' || key === 'email') {\r\n            self.setState(prevState => ({\r\n                _user: {\r\n                    ...prevState._user,\r\n                    [key]: value\r\n                }\r\n            }));\r\n        } else {\r\n            this.setState({ [key]: value });\r\n        }\r\n    }\r\n    _progress(user) {\r\n        function percentage(partialValue, totalValue) {\r\n            return (100 * partialValue) / totalValue;\r\n        }\r\n\r\n        var count = 0;\r\n        let total = 0;\r\n        Object.keys(user).forEach(function(key,index) {\r\n            if(key != '_id' && key != 'activated' && key != 'messages' && key != 'createdAt' && key != 'updatedAt' && key != '__v'){\r\n                total += 1;\r\n                count += (!user[key] ? 0 : 1);\r\n            }\r\n        });\r\n\r\n        $('.bar').width(_.ceil(percentage(count, total), 0)+'%');\r\n        return _.ceil(percentage(count, total), 0);\r\n    }\r\n    _progress_total(user) {\r\n        var count = 0;\r\n        Object.keys(user).forEach(function(key,index) {\r\n            if(key != '_id' && key != 'activated' && key != 'messages' && key != 'createdAt' && key != 'updatedAt' && key != '__v')\r\n                count += 1;\r\n        });\r\n        return _.ceil(count, 0);\r\n    }\r\n    render() {\r\n        const { _user, _current_password, _new_password, _confirm_password, modal_msg } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"_form\">\r\n                    <div className=\"modal-content_user\">\r\n                        <div className='row'>\r\n                            <div className='input-field col'>\r\n                                <input \r\n                                className='validate form-group-input username' \r\n                                type='text' \r\n                                name='username' \r\n                                id='username' \r\n                                required=\"required\"\r\n                                onChange={(ev) => this.handleChangeField('username', ev)}\r\n                                value={_user.username}\r\n                                />\r\n                                <label htmlFor='username' className={_user.username ? 'active' : ''}>username</label>\r\n                                <div className=\"form-group-line\"></div>\r\n                            </div>\r\n                            <div className='input-field col'>\r\n                                <input \r\n                                className='validate form-group-input email' \r\n                                type='email' \r\n                                name='email' \r\n                                id='email' \r\n                                required=\"required\"\r\n                                onChange={(ev) => this.handleChangeField('email', ev)}\r\n                                value={_user.email}\r\n                                />\r\n                                <label htmlFor='email' className={_user.email ? 'active' : ''}>Email</label>\r\n                                <div className=\"form-group-line\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='input-field col'>\r\n                                <input \r\n                                className='validate form-group-input _current_password' \r\n                                type='password' \r\n                                name='_current_password' \r\n                                id='_current_password' \r\n                                required=\"required\" \r\n                                onChange={(ev) => this.handleChangeField('_current_password', ev)}\r\n                                value={_current_password}\r\n                                autoComplete=\"new-password\"\r\n                                />\r\n                                <label htmlFor='_current_password' className={_current_password ? 'active' : ''}>Current Password</label>\r\n                                <div className=\"form-group-line\"></div>\r\n                            </div>\r\n                            <div className='input-field col'>\r\n                                <input \r\n                                className='validate form-group-input _new_password' \r\n                                type='password' \r\n                                name='_new_password' \r\n                                id='_new_password' \r\n                                required=\"required\" \r\n                                onChange={(ev) => this.handleChangeField('_new_password', ev)}\r\n                                value={_new_password}\r\n                                />\r\n                                <label htmlFor='_new_password' className={_new_password ? 'active' : ''}>New Password</label>\r\n                                <div className=\"form-group-line\"></div>\r\n                            </div>\r\n                            <div className='input-field col'>\r\n                                <input \r\n                                className='validate form-group-input' \r\n                                type='password' \r\n                                name='_confirm_password' \r\n                                id='_confirm_password' \r\n                                required=\"required\" \r\n                                value={_confirm_password} \r\n                                onChange={(ev) => this.handleChangeField('_confirm_password', ev)}\r\n                                />\r\n                                <label htmlFor='_confirm_password' className={_confirm_password ? 'active' : ''}>Confirm Password</label>\r\n                                <div className=\"form-group-line\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <button \r\n                                className=\"pull-right\"\r\n                                onClick={this.send_user}\r\n                            >\r\n                                <span>\r\n                                    <span>\r\n                                        <span data-attr-span=\"Update.\">\r\n                                            Update.\r\n                                        </span>\r\n                                    </span>\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    articleToEdit: state.home.articleToEdit,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setEdit: article => dispatch({ type: 'SET_EDIT', article }),\r\n    onSubmit: data => dispatch({ type: 'SUBMIT_ARTICLE', data }),\r\n    onEdit: data => dispatch({ type: 'EDIT_ARTICLE', data }),\r\n    \r\n    onSubmitNotification: data => dispatch({ type: 'SUBMIT_NOTIFICATION', data }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\reducers\\index.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Project\\index.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Article\\index.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\reducers\\home.js",["226"],"import { \r\n    HOME_PAGE_LOADED, \r\n    SUBMIT_ARTICLE, \r\n    DELETE_ARTICLE, \r\n    SET_EDIT, \r\n    EDIT_ARTICLE, \r\n\r\n    NOTIFICATION_PAGE_LOADED, \r\n    SUBMIT_NOTIFICATION, \r\n\r\n    PROJECT_PAGE_LOADED, \r\n    SUBMIT_PROJECT, \r\n    DELETE_PROJECT, \r\n    SET_EDIT_PROJECT, \r\n    EDIT_PROJECT, \r\n\r\n    TESTIMONY_PAGE_LOADED, \r\n    SUBMIT_TESTIMONY, \r\n    DELETE_TESTIMONY, \r\n    SET_EDIT_TESTIMONY, \r\n    EDIT_TESTIMONY, \r\n    \r\n    USER_PAGE_LOADED, \r\n    SUBMIT_USER, \r\n    DELETE_USER, \r\n    SET_EDIT_USER, \r\n    EDIT_USER \r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    articles: [],\r\n    projects: [],\r\n    testimonies: [],\r\n    user: {},\r\n    users: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //ARTICLE\r\n        case HOME_PAGE_LOADED:\r\n            return {\r\n                ...state,\r\n                articles: action.data.articles,\r\n            };\r\n        case SUBMIT_ARTICLE:\r\n            return {\r\n                ...state,\r\n                articles: ([action.data.article]).concat(state.articles),\r\n            };\r\n        case DELETE_ARTICLE:\r\n            return {\r\n                ...state,\r\n                articles: state.articles.filter((article) => article._id !== action.id),\r\n            };\r\n        case SET_EDIT:\r\n            return {\r\n                ...state,\r\n                articleToEdit: action.article,\r\n            };\r\n        case EDIT_ARTICLE:\r\n            return {\r\n                ...state,\r\n                articles: state.articles.map((article) => {\r\n                    if (article._id === action.data.article._id) {\r\n                        return {\r\n                            ...action.data.article,\r\n                        }\r\n                    }\r\n                    return article;\r\n                }),\r\n                articleToEdit: undefined,\r\n            };\r\n\r\n        //NOTIFICATION\r\n        case NOTIFICATION_PAGE_LOADED:\r\n            return {\r\n                ...state,\r\n                notifications: action.data.notifications,\r\n            };\r\n        case SUBMIT_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                notifications: ([action.data.notification]).concat(state.notifications),\r\n            };\r\n\r\n        //PROJECT\r\n        case PROJECT_PAGE_LOADED:\r\n            return {\r\n                ...state,\r\n                projects: action.data.projects,\r\n            };\r\n        case SUBMIT_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: ([action.data.project]).concat(state.projects),\r\n            };\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter((project) => project._id !== action.id),\r\n            };\r\n        case SET_EDIT_PROJECT:\r\n            return {\r\n                ...state,\r\n                projectToEdit: action.project,\r\n            };\r\n        case EDIT_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map((project) => {\r\n                    if (project._id === action.data.project._id) {\r\n                        return {\r\n                            ...action.data.project,\r\n                        }\r\n                    }\r\n                    return project;\r\n                }),\r\n                projectToEdit: undefined,\r\n            };\r\n\r\n        //TESTIMONY\r\n        case TESTIMONY_PAGE_LOADED:\r\n            return {\r\n                ...state,\r\n                testimonies: action.data.testimonies,\r\n            };\r\n        case SUBMIT_TESTIMONY:\r\n            return {\r\n                ...state,\r\n                testimonies: ([action.data.testimony]).concat(state.testimonies),\r\n            };\r\n        case DELETE_TESTIMONY:\r\n            return {\r\n                ...state,\r\n                testimonies: state.testimonies.filter((testimony) => testimony._id !== action.id),\r\n            };\r\n        case SET_EDIT_TESTIMONY:\r\n            return {\r\n                ...state,\r\n                testimonyToEdit: action.testimony,\r\n            };\r\n        case EDIT_TESTIMONY:\r\n            return {\r\n                ...state,\r\n                testimonies: state.testimonies.map((testimony) => {\r\n                    if (testimony._id === action.data.testimony._id) {\r\n                        return {\r\n                            ...action.data.testimony,\r\n                        }\r\n                    }\r\n                    return testimony;\r\n                }),\r\n                testimonyToEdit: undefined,\r\n            };\r\n\r\n        //USER\r\n        case USER_PAGE_LOADED:\r\n            return {\r\n                user: action.data.user,\r\n            };\r\n        case SUBMIT_USER:\r\n            return {\r\n                ...state,\r\n                users: ([action.data.user]).concat(state.user),\r\n            };\r\n        case DELETE_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.filter((user) => user._id !== action.id),\r\n            };\r\n        case SET_EDIT_USER:\r\n            return {\r\n                ...state,\r\n                userToEdit: action.user,\r\n            };\r\n        case EDIT_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user._id === action.data.user._id) {\r\n                        return {\r\n                            ...action.data.user,\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n                userToEdit: undefined,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\actions\\types.js",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Project\\FormProject\\index.jsx",[],"E:\\PROJECTS\\LETSMAKEMONEY\\CV\\client\\src\\components\\Article\\Form\\index.jsx",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":45,"column":17,"nodeType":"233","messageId":"234","endLine":45,"endColumn":19},{"ruleId":"235","severity":1,"message":"236","line":45,"column":38,"nodeType":"237","messageId":"238","endLine":45,"endColumn":96},{"ruleId":"239","severity":1,"message":"240","line":95,"column":12,"nodeType":"241","endLine":95,"endColumn":74},{"ruleId":"239","severity":1,"message":"240","line":58,"column":12,"nodeType":"241","endLine":58,"endColumn":74},{"ruleId":"231","severity":1,"message":"232","line":184,"column":11,"nodeType":"233","messageId":"234","endLine":184,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":219,"column":79,"nodeType":"233","messageId":"234","endLine":219,"endColumn":81},{"ruleId":"231","severity":1,"message":"232","line":254,"column":71,"nodeType":"233","messageId":"234","endLine":254,"endColumn":73},{"ruleId":"231","severity":1,"message":"232","line":286,"column":73,"nodeType":"233","messageId":"234","endLine":286,"endColumn":75},{"ruleId":"231","severity":1,"message":"232","line":321,"column":77,"nodeType":"233","messageId":"234","endLine":321,"endColumn":79},{"ruleId":"231","severity":1,"message":"232","line":485,"column":84,"nodeType":"233","messageId":"234","endLine":485,"endColumn":86},{"ruleId":"231","severity":1,"message":"232","line":522,"column":77,"nodeType":"233","messageId":"234","endLine":522,"endColumn":79},{"ruleId":"231","severity":1,"message":"232","line":571,"column":78,"nodeType":"233","messageId":"234","endLine":571,"endColumn":80},{"ruleId":"231","severity":1,"message":"232","line":608,"column":83,"nodeType":"233","messageId":"234","endLine":608,"endColumn":85},{"ruleId":"231","severity":1,"message":"232","line":665,"column":58,"nodeType":"233","messageId":"234","endLine":665,"endColumn":60},{"ruleId":"242","severity":1,"message":"243","line":934,"column":118,"nodeType":"244","messageId":"245","endLine":934,"endColumn":120},{"ruleId":"246","severity":1,"message":"247","line":6,"column":8,"nodeType":"248","messageId":"249","endLine":6,"endColumn":14},{"ruleId":"250","severity":1,"message":"251","line":24,"column":22,"nodeType":"252","messageId":"253","endLine":31,"endColumn":10},{"ruleId":"231","severity":1,"message":"232","line":154,"column":54,"nodeType":"233","messageId":"234","endLine":154,"endColumn":56},{"ruleId":"231","severity":1,"message":"232","line":160,"column":35,"nodeType":"233","messageId":"234","endLine":160,"endColumn":37},{"ruleId":"231","severity":1,"message":"232","line":187,"column":54,"nodeType":"233","messageId":"234","endLine":187,"endColumn":56},{"ruleId":"231","severity":1,"message":"232","line":193,"column":35,"nodeType":"233","messageId":"234","endLine":193,"endColumn":37},{"ruleId":"231","severity":1,"message":"232","line":209,"column":39,"nodeType":"233","messageId":"234","endLine":209,"endColumn":41},{"ruleId":"231","severity":1,"message":"232","line":213,"column":39,"nodeType":"233","messageId":"234","endLine":213,"endColumn":41},{"ruleId":"231","severity":1,"message":"232","line":222,"column":39,"nodeType":"233","messageId":"234","endLine":222,"endColumn":41},{"ruleId":"231","severity":1,"message":"232","line":226,"column":39,"nodeType":"233","messageId":"234","endLine":226,"endColumn":41},{"ruleId":"254","severity":1,"message":"255","line":274,"column":44,"nodeType":"248","messageId":"256","endLine":274,"endColumn":49},{"ruleId":"231","severity":1,"message":"232","line":83,"column":114,"nodeType":"233","messageId":"234","endLine":83,"endColumn":116},{"ruleId":"231","severity":1,"message":"232","line":131,"column":100,"nodeType":"233","messageId":"234","endLine":131,"endColumn":102},{"ruleId":"231","severity":1,"message":"232","line":174,"column":108,"nodeType":"233","messageId":"234","endLine":174,"endColumn":110},{"ruleId":"231","severity":1,"message":"232","line":222,"column":106,"nodeType":"233","messageId":"234","endLine":222,"endColumn":108},{"ruleId":"246","severity":1,"message":"257","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":16},{"ruleId":"246","severity":1,"message":"258","line":16,"column":8,"nodeType":"248","messageId":"249","endLine":16,"endColumn":13},{"ruleId":"246","severity":1,"message":"259","line":392,"column":13,"nodeType":"248","messageId":"249","endLine":392,"endColumn":24},{"ruleId":"246","severity":1,"message":"260","line":400,"column":13,"nodeType":"248","messageId":"249","endLine":400,"endColumn":29},{"ruleId":"231","severity":1,"message":"261","line":408,"column":49,"nodeType":"233","messageId":"234","endLine":408,"endColumn":51},{"ruleId":"246","severity":1,"message":"262","line":421,"column":13,"nodeType":"248","messageId":"249","endLine":421,"endColumn":25},{"ruleId":"246","severity":1,"message":"263","line":442,"column":13,"nodeType":"248","messageId":"249","endLine":442,"endColumn":27},{"ruleId":"246","severity":1,"message":"264","line":463,"column":13,"nodeType":"248","messageId":"249","endLine":463,"endColumn":28},{"ruleId":"246","severity":1,"message":"265","line":484,"column":13,"nodeType":"248","messageId":"249","endLine":484,"endColumn":31},{"ruleId":"246","severity":1,"message":"266","line":524,"column":17,"nodeType":"248","messageId":"249","endLine":524,"endColumn":38},{"ruleId":"246","severity":1,"message":"267","line":524,"column":40,"nodeType":"248","messageId":"249","endLine":524,"endColumn":58},{"ruleId":"231","severity":1,"message":"232","line":560,"column":20,"nodeType":"233","messageId":"234","endLine":560,"endColumn":22},{"ruleId":"246","severity":1,"message":"268","line":593,"column":17,"nodeType":"248","messageId":"249","endLine":593,"endColumn":36},{"ruleId":"269","severity":1,"message":"270","line":809,"column":13,"nodeType":"271","messageId":"272","endLine":809,"endColumn":26,"fix":"273"},{"ruleId":"274","severity":1,"message":"275","line":1014,"column":47,"nodeType":"248","messageId":"234","endLine":1014,"endColumn":52,"fix":"276"},{"ruleId":"246","severity":1,"message":"277","line":1083,"column":13,"nodeType":"248","messageId":"249","endLine":1083,"endColumn":21},{"ruleId":"246","severity":1,"message":"278","line":1084,"column":13,"nodeType":"248","messageId":"249","endLine":1084,"endColumn":23},{"ruleId":"246","severity":1,"message":"279","line":1085,"column":13,"nodeType":"248","messageId":"249","endLine":1085,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":1144,"column":152,"nodeType":"233","messageId":"234","endLine":1144,"endColumn":154},{"ruleId":"231","severity":1,"message":"232","line":1144,"column":181,"nodeType":"233","messageId":"234","endLine":1144,"endColumn":183},{"ruleId":"231","severity":1,"message":"232","line":1144,"column":218,"nodeType":"233","messageId":"234","endLine":1144,"endColumn":220},{"ruleId":"231","severity":1,"message":"232","line":1144,"column":251,"nodeType":"233","messageId":"234","endLine":1144,"endColumn":253},{"ruleId":"231","severity":1,"message":"261","line":1149,"column":121,"nodeType":"233","messageId":"234","endLine":1149,"endColumn":123},{"ruleId":"231","severity":1,"message":"232","line":1726,"column":169,"nodeType":"233","messageId":"234","endLine":1726,"endColumn":171},{"ruleId":"231","severity":1,"message":"232","line":1726,"column":198,"nodeType":"233","messageId":"234","endLine":1726,"endColumn":200},{"ruleId":"231","severity":1,"message":"232","line":1726,"column":235,"nodeType":"233","messageId":"234","endLine":1726,"endColumn":237},{"ruleId":"231","severity":1,"message":"232","line":1726,"column":268,"nodeType":"233","messageId":"234","endLine":1726,"endColumn":270},{"ruleId":"231","severity":1,"message":"261","line":1737,"column":149,"nodeType":"233","messageId":"234","endLine":1737,"endColumn":151},{"ruleId":"242","severity":1,"message":"243","line":2379,"column":251,"nodeType":"244","messageId":"245","endLine":2379,"endColumn":253},{"ruleId":"239","severity":1,"message":"240","line":2600,"column":45,"nodeType":"241","endLine":2600,"endColumn":107},{"ruleId":"280","severity":1,"message":"281","line":7,"column":1,"nodeType":"282","endLine":60,"endColumn":3},{"ruleId":"246","severity":1,"message":"283","line":73,"column":13,"nodeType":"248","messageId":"249","endLine":73,"endColumn":14},{"ruleId":"246","severity":1,"message":"284","line":74,"column":13,"nodeType":"248","messageId":"249","endLine":74,"endColumn":14},{"ruleId":"246","severity":1,"message":"285","line":166,"column":13,"nodeType":"248","messageId":"249","endLine":166,"endColumn":24},{"ruleId":"246","severity":1,"message":"286","line":186,"column":21,"nodeType":"248","messageId":"249","endLine":186,"endColumn":25},{"ruleId":"231","severity":1,"message":"232","line":135,"column":44,"nodeType":"233","messageId":"234","endLine":135,"endColumn":46},{"ruleId":"231","severity":1,"message":"232","line":178,"column":44,"nodeType":"233","messageId":"234","endLine":178,"endColumn":46},{"ruleId":"231","severity":1,"message":"232","line":306,"column":136,"nodeType":"233","messageId":"234","endLine":306,"endColumn":138},{"ruleId":"231","severity":1,"message":"232","line":341,"column":130,"nodeType":"233","messageId":"234","endLine":341,"endColumn":132},{"ruleId":"246","severity":1,"message":"287","line":64,"column":13,"nodeType":"248","messageId":"249","endLine":64,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":70,"column":66,"nodeType":"244","messageId":"290","endLine":70,"endColumn":167},{"ruleId":"231","severity":1,"message":"261","line":48,"column":35,"nodeType":"233","messageId":"234","endLine":48,"endColumn":37},{"ruleId":"246","severity":1,"message":"291","line":74,"column":24,"nodeType":"248","messageId":"249","endLine":74,"endColumn":28},{"ruleId":"246","severity":1,"message":"292","line":74,"column":38,"nodeType":"248","messageId":"249","endLine":74,"endColumn":47},{"ruleId":"246","severity":1,"message":"293","line":74,"column":49,"nodeType":"248","messageId":"249","endLine":74,"endColumn":54},{"ruleId":"246","severity":1,"message":"294","line":74,"column":56,"nodeType":"248","messageId":"249","endLine":74,"endColumn":59},{"ruleId":"246","severity":1,"message":"295","line":74,"column":61,"nodeType":"248","messageId":"249","endLine":74,"endColumn":68},{"ruleId":"246","severity":1,"message":"296","line":74,"column":70,"nodeType":"248","messageId":"249","endLine":74,"endColumn":77},{"ruleId":"246","severity":1,"message":"297","line":74,"column":79,"nodeType":"248","messageId":"249","endLine":74,"endColumn":88},{"ruleId":"246","severity":1,"message":"298","line":74,"column":90,"nodeType":"248","messageId":"249","endLine":74,"endColumn":94},{"ruleId":"246","severity":1,"message":"299","line":76,"column":15,"nodeType":"248","messageId":"249","endLine":76,"endColumn":19},{"ruleId":"235","severity":1,"message":"236","line":120,"column":62,"nodeType":"237","messageId":"238","endLine":120,"endColumn":194},{"ruleId":"231","severity":1,"message":"232","line":121,"column":34,"nodeType":"233","messageId":"234","endLine":121,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":121,"column":56,"nodeType":"237","messageId":"238","endLine":121,"endColumn":113},{"ruleId":"231","severity":1,"message":"232","line":181,"column":20,"nodeType":"233","messageId":"234","endLine":181,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":181,"column":36,"nodeType":"233","messageId":"234","endLine":181,"endColumn":38},{"ruleId":"231","severity":1,"message":"232","line":181,"column":58,"nodeType":"233","messageId":"234","endLine":181,"endColumn":60},{"ruleId":"231","severity":1,"message":"232","line":181,"column":79,"nodeType":"233","messageId":"234","endLine":181,"endColumn":81},{"ruleId":"231","severity":1,"message":"232","line":181,"column":101,"nodeType":"233","messageId":"234","endLine":181,"endColumn":103},{"ruleId":"231","severity":1,"message":"232","line":181,"column":123,"nodeType":"233","messageId":"234","endLine":181,"endColumn":125},{"ruleId":"231","severity":1,"message":"232","line":193,"column":20,"nodeType":"233","messageId":"234","endLine":193,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":193,"column":36,"nodeType":"233","messageId":"234","endLine":193,"endColumn":38},{"ruleId":"231","severity":1,"message":"232","line":193,"column":58,"nodeType":"233","messageId":"234","endLine":193,"endColumn":60},{"ruleId":"231","severity":1,"message":"232","line":193,"column":79,"nodeType":"233","messageId":"234","endLine":193,"endColumn":81},{"ruleId":"231","severity":1,"message":"232","line":193,"column":101,"nodeType":"233","messageId":"234","endLine":193,"endColumn":103},{"ruleId":"231","severity":1,"message":"232","line":193,"column":123,"nodeType":"233","messageId":"234","endLine":193,"endColumn":125},{"ruleId":"246","severity":1,"message":"300","line":199,"column":77,"nodeType":"248","messageId":"249","endLine":199,"endColumn":86},{"ruleId":"280","severity":1,"message":"301","line":38,"column":1,"nodeType":"282","endLine":194,"endColumn":3},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'jQuery' is defined but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-use-before-define","'timer' was used before it was defined.","usedBeforeDefined","'Calendar' is defined but never used.","'Clock' is defined but never used.","'_popularity' is assigned a value but never used.","'chart_byCategory' is assigned a value but never used.","Expected '===' and instead saw '=='.","'chart_byView' is assigned a value but never used.","'chart_byUpvote' is assigned a value but never used.","'chart_byComment' is assigned a value but never used.","'chart_byViewFollow' is assigned a value but never used.","'_user_toEdit_username' is assigned a value but never used.","'_user_toEdit_roles' is assigned a value but never used.","'mySwiperTestimonies' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"304","text":"305"},"no-extra-label","This label 'inner' is unnecessary.",{"range":"306","text":"305"},"'_views_c' is assigned a value but never used.","'_upvotes_c' is assigned a value but never used.","'_comments_c' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'resizeCount' is assigned a value but never used.","'data' is assigned a value but never used.","'_event_dates' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'day'.","unsafeRefs","'body' is assigned a value but never used.","'categorie' is assigned a value but never used.","'_hide' is assigned a value but never used.","'tag' is assigned a value but never used.","'comment' is assigned a value but never used.","'upvotes' is assigned a value but never used.","'downvotes' is assigned a value but never used.","'view' is assigned a value but never used.","'self' is assigned a value but never used.","'modal_msg' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation",[32367,32380],"",[43443,43449]]